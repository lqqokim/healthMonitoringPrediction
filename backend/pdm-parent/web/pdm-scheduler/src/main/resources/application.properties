# ===================================================================
# COMMON SPRING BOOT PROPERTIES
#
# ===================================================================
# ===================================================================
# BANNER
# ===================================================================
# Banner file encoding.
spring.banner.charset=UTF-8
# Banner text resource location.
spring.banner.location=classpath:banner.txt
# ===================================================================
# SPRING CONFIG - using environment property only (ConfigFileApplicationListener)
# ===================================================================
# Config file name.
# spring.config.name=application
# Config file locations that replace the defaults.
# spring.config.location=classpath:application.properties
# ===================================================================
# APPLICATION SETTINGS (SpringApplication)
# ===================================================================
# Mode used to display the banner when the application runs.
spring.main.banner-mode=console
# Sources (class names, package names, or XML resource locations) to include in the ApplicationContext.
#spring.main.sources=
# Flag to explicitly request a specific type of web application. If not set, auto-detected based on the classpath.
#spring.main.web-application-type=
# OUTPUT
# Configures the ANSI output.
spring.output.ansi.enabled=detect
# PID FILE (ApplicationPidFileWriter)
# Fails if ApplicationPidFileWriter is used but it cannot write the PID file.
#spring.pid.fail-on-write-error=
# Location of the PID file to write (if ApplicationPidFileWriter is used).
#spring.pid.file=
# ===================================================================
# PROFILES
# ===================================================================
# Comma-separated list of active profiles. Can be overridden by a command line switch.
spring.profiles.active=development
# Unconditionally activate the specified comma-separated list of profiles (or list of profiles if using YAML).
#spring.profiles.include=
# ===================================================================
# LOGGING
# ===================================================================
# Enable debug logs.
#debug=true
# Enable trace logs.
#trace=false
# Location of the logging configuration file. For instance, `classpath:logback.xml` for Logback.
logging.config=classpath:logback-spring.xml
# Log file name (for instance, `myapp.log`). Names can be an exact location or relative to the current directory.
#logging.file=./logs
# Log levels severity mapping. For instance, `logging.level.org.springframework=DEBUG`.
#logging.level.*=
logging.level.org.springframework=INFO
logging.level.com.bistel.pdm.scheduler=DEBUG
# Location of the log file. For instance, `/var/log`.
logging.path=./logs
# ===================================================================
# EMBEDDED SERVER CONFIGURATION (ServerProperties)
# ===================================================================
# Network address to which the server should bind.
#server.address=localhost
# Server HTTP port.
server.port=8888
# Undertow access log directory.
#server.undertow.accesslog.dir=
# Whether to enable the access log.
#server.undertow.accesslog.enabled=false
# Format pattern for access logs.
#server.undertow.accesslog.pattern=common
# Log file name prefix.
#server.undertow.accesslog.prefix=access_log.
# Whether to enable access log rotation.
#server.undertow.accesslog.rotate=true
# Log file name suffix.
#server.undertow.accesslog.suffix=log
# Size of each buffer, in bytes.
#server.undertow.buffer-size=2048
# Allocate buffers outside the Java heap. The default is derived from the maximum amount of memory
# that is available to the JVM.
#server.undertow.direct-buffers=512
# Whether servlet filters should be initialized on startup.
#server.undertow.eager-filter-init=true
# Number of I/O threads to create for the worker. The default is derived from the number of available processors.
#server.undertow.io-threads=
# Maximum size in bytes of the HTTP post content. When the value is -1, the default, the size is unlimited.
#server.undertow.max-http-post-size=-1
# Number of worker threads. The default is 8 times the number of I/O threads.
#server.undertow.worker-threads=
# ===================================================================
# JACKSON (JacksonProperties)
# ===================================================================
# Date format string or a fully-qualified date format class name.
# For instance, `yyyy-MM-dd HH:mm:ss`.
#spring.jackson.date-format=yyyy-MM-dd HH:mm:ss.SSS
# Controls the inclusion of properties during serialization.
# Configured with one of the values in Jackson's JsonInclude.Include enumeration.
#spring.jackson.default-property-inclusion=
# Jackson on/off features that affect the way Java objects are deserialized.
#spring.jackson.deserialization.*=
# Jackson on/off features for generators.
#spring.jackson.generator.*=
# Joda date time format string. If not configured, "date-format" is used as a fallback
# if it is configured with a format string.
#spring.jackson.joda-date-time-format=
# Locale used for formatting.
#spring.jackson.locale=
# Jackson general purpose on/off features.
#spring.jackson.mapper.*=
# Jackson on/off features for parsers.
#spring.jackson.parser.*=
# One of the constants on Jackson's PropertyNamingStrategy. Can also be
# a fully-qualified class name of a PropertyNamingStrategy subclass.
#spring.jackson.property-naming-strategy=
# Jackson on/off features that affect the way Java objects are serialized.
#spring.jackson.serialization.*=
# Time zone used when formatting dates. For instance, "America/Los_Angeles" or "GMT+10".
#spring.jackson.time-zone=
# ===================================================================
# QUARTZ DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# ===================================================================
quartz.datasource.type=com.zaxxer.hikari.HikariDataSource
quartz.datasource.url=jdbc:oracle:thin:@//192.168.8.36:1521/pdm
quartz.datasource.username=npdm
quartz.datasource.password=bistel01
quartz.datasource.pool-prepared-statements=true
quartz.datasource.max-open-prepared-statements=250
# Hikari specific settings
quartz.datasource.hikari.minimumIdle=10
quartz.datasource.hikari.maximumPoolSize=30
quartz.datasource.hikari.connectionTimeout=30000
quartz.datasource.hikari.idleTimeout=600000
quartz.datasource.hikari.maxLifetime=1800000
quartz.datasource.hikari.auto-commit=false
# ===================================================================
# Mybatis DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# ===================================================================
mybatis.datasource.type=com.zaxxer.hikari.HikariDataSource
mybatis.datasource.url=jdbc:oracle:thin:@//192.168.8.36:1521/pdm
mybatis.datasource.username=npdm
mybatis.datasource.password=bistel01
mybatis.datasource.pool-prepared-statements=true
mybatis.datasource.max-open-prepared-statements=250
# Hikari specific settings
mybatis.datasource.hikari.minimumIdle=10
mybatis.datasource.hikari.maximumPoolSize=30
mybatis.datasource.hikari.connectionTimeout=30000
mybatis.datasource.hikari.idleTimeout=600000
mybatis.datasource.hikari.maxLifetime=1800000
mybatis.datasource.hikari.auto-commit=false
# ===================================================================
# QUARTZ SCHEDULER (QuartzProperties)
# ===================================================================
# Prefix for single-line comments in SQL initialization scripts.
#spring.quartz.jdbc.comment-prefix=--
# Database schema initialization mode.
spring.quartz.jdbc.initialize-schema=embedded
# Path to the SQL file to use to initialize the database schema.
spring.quartz.jdbc.schema=classpath:org/quartz/impl/jdbcjobstore/tables_@@platform@@.sql
# Quartz job store type. (jdbc or memory)
spring.quartz.job-store-type=jdbc
# Additional Quartz Scheduler properties.
spring.quartz.properties.org.quartz.threadPool.threadCount=5
# ===================================================================
# Mybatis (Mybatis-config.xml)
# ===================================================================
mybatis.config-location=classpath:mybatis-config.xml
#mybatis.type-aliases-package=com.bistel.pdm.web.domain
#mybatis.type-handlers-package=com.bistel.pdm.web.handler
#mybatis.configuration.map-underscore-to-camel-case=true
#mybatis.configuration.default-fetch-size=100
#mybatis.configuration.default-statement-timeout=30
# ===================================================================
# JMX
# ===================================================================
# JMX domain name.
#spring.jmx.default-domain=
# Expose management beans to the JMX domain.
#spring.jmx.enabled=true
# MBeanServer bean name.
#spring.jmx.server=mbeanServer
# ===================================================================
# JOOQ (JooqProperties)
# ===================================================================
#spring.jooq.sql-dialect= # SQL dialect to use. Auto-detected by default.
# ===================================================================
# JDBC (JdbcProperties)
# ===================================================================
#spring.jdbc.template.fetch-size=-1 # Number of rows that should be fetched from the database when more rows are needed.
#spring.jdbc.template.max-rows=-1 # Maximum number of rows.
#spring.jdbc.template.query-timeout= # Query timeout. Default is to use the JDBC driver's default configuration. If a duration suffix is not specified, seconds will be used.
# ===================================================================
# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
# ===================================================================
#spring.data.jpa.repositories.enabled=true # Whether to enable JPA repositories.
#spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
#spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
#spring.jpa.generate-ddl=false # Whether to initialize the schema on startup.
#spring.jpa.hibernate.ddl-auto= # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" when using an embedded database and no schema manager was detected. Otherwise, defaults to "none".
#spring.jpa.hibernate.naming.implicit-strategy= # Fully qualified name of the implicit naming strategy.
#spring.jpa.hibernate.naming.physical-strategy= # Fully qualified name of the physical naming strategy.
#spring.jpa.hibernate.use-new-id-generator-mappings= # Whether to use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#spring.jpa.mapping-resources= # Mapping resources (equivalent to "mapping-file" entries in persistence.xml).
#spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#spring.jpa.properties.*= # Additional native properties to set on the JPA provider.
#spring.jpa.show-sql=false # Whether to enable logging of SQL statements.


