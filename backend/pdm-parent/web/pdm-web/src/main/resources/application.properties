# ===================================================================
# COMMON SPRING BOOT PROPERTIES
#
# This sample file is provided as a guideline. Do NOT copy it in its
# entirety to your own application.               ^^^
# ===================================================================


# ===================================================================
# BANNER
# ===================================================================
# Banner file encoding.
spring.banner.charset=UTF-8
# Banner text resource location.
#spring.banner.location=classpath:banner.txt

# ===================================================================
# SPRING CONFIG - using environment property only (ConfigFileApplicationListener)
# ===================================================================
# Config file name.
#spring.config.name=application
# Config file locations that replace the defaults.
#spring.config.location=classpath:application.properties
# Config file locations used in addition to the defaults.
#spring.config.additional-location=

# ===================================================================
# APPLICATION SETTINGS (SpringApplication)
# ===================================================================
# Mode used to display the banner when the application runs.
#spring.main.banner-mode=console
# Sources (class names, package names, or XML resource locations) to include in the ApplicationContext.
#spring.main.sources=
# Flag to explicitly request a specific type of web application. If not set, auto-detected based on the classpath.
#spring.main.web-application-type=

# OUTPUT
# Configures the ANSI output.
spring.output.ansi.enabled=detect

# PID FILE (ApplicationPidFileWriter)
# Fails if ApplicationPidFileWriter is used but it cannot write the PID file.
#spring.pid.fail-on-write-error=
# Location of the PID file to write (if ApplicationPidFileWriter is used).
#spring.pid.file=

# ===================================================================
# PROFILES
# ===================================================================
# Comma-separated list of active profiles. Can be overridden by a command line switch.
spring.profiles.active=development
# Unconditionally activate the specified comma-separated list of profiles (or list of profiles if using YAML).
#spring.profiles.include=

# ===================================================================
# LOGGING
# ===================================================================
# Enable debug logs.
#debug=true
# Enable trace logs.
#trace=false

# Location of the logging configuration file. For instance, `classpath:logback.xml` for Logback.
logging.config=classpath:logback-spring.xml
# Conversion word used when logging exceptions.
#logging.exception-conversion-word=%wEx
# Log file name (for instance, `myapp.log`). Names can be an exact location or relative to the current directory.
logging.file=./logs
# Maximum of archive log files to keep. Only supported with the default logback setup.
#logging.file.max-history=0
# Maximum log file size. Only supported with the default logback setup.
#logging.file.max-size=10MB
# Log levels severity mapping. For instance, `logging.level.org.springframework=DEBUG`.
#logging.level.*=
logging.level.org.springframework=INFO
logging.level.com.bistel.pdm.web=DEBUG
# Location of the log file. For instance, `/var/log`.
#logging.path=
# Appender pattern for output to the console. Supported only with the default Logback setup.
#logging.pattern.console=
# Appender pattern for log date format. Supported only with the default Logback setup.
#logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS
# Appender pattern for output to a file. Supported only with the default Logback setup.
#logging.pattern.file=
# Appender pattern for log level. Supported only with the default Logback setup.
#logging.pattern.level=%5p
# Register a shutdown hook for the logging system when it is initialized.
#logging.register-shutdown-hook=false

# ===================================================================
# SPRING WEBFLUX (WebFluxProperties)
# ===================================================================
# Date format to use. For instance, `dd/MM/yyyy`.
#spring.webflux.date-format=yyyy-MM-dd HH:mm:ss.SSS
# Path pattern used for static resources.
#spring.webflux.static-path-pattern=/**

# ===================================================================
# EMBEDDED SERVER CONFIGURATION (ServerProperties)
# ===================================================================
# Network address to which the server should bind.
#server.address=localhost
# Server HTTP port.
server.port=8080
# Whether response compression is enabled.
#server.compression.enabled=false
# List of user-agents to exclude from compression.
#server.compression.excluded-user-agents=
# Comma-separated list of MIME types that should be compressed.
#server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript
# Minimum "Content-Length" value that is required for compression to be performed.
#server.compression.min-response-size=2048
# Time that connectors wait for another HTTP request before closing the connection.
# When not set, the connector's container-specific default is used. Use a value of -1
# to indicate no (that is, an infinite) timeout.
#server.connection-timeout=
# Include the "exception" attribute.
#server.error.include-exception=false
# When to include a "stacktrace" attribute.
#server.error.include-stacktrace=never
# Path of the error controller.
#server.error.path=/error
# Whether to enable the default error page displayed in browsers in case of a server error.
#server.error.whitelabel.enabled=true
# Whether to enable HTTP/2 support, if the current environment supports it.
#server.http2.enabled=false
# Maximum size, in bytes, of the HTTP message header.
#server.max-http-header-size=0
# Value to use for the Server response header (if empty, no header is sent).
#server.server-header=
# Whether X-Forwarded-* headers should be applied to the HttpRequest.
#server.use-forward-headers=
# Servlet context init parameters.
#server.servlet.context-parameters.*=
#server.servlet.context-path= # Context path of the application.
#server.servlet.application-display-name=application # Display name of the application.
#server.servlet.jsp.class-name=org.apache.jasper.servlet.JspServlet # The class name of the JSP servlet.
#server.servlet.jsp.init-parameters.*= # Init parameters used to configure the JSP servlet.
#server.servlet.jsp.registered=true # Whether the JSP servlet is registered.
#server.servlet.path=/ # Path of the main dispatcher servlet.
#server.servlet.session.cookie.comment= # Comment for the session cookie.
#server.servlet.session.cookie.domain= # Domain for the session cookie.
#server.servlet.session.cookie.http-only= # "HttpOnly" flag for the session cookie.
#server.servlet.session.cookie.max-age= # Maximum age of the session cookie. If a duration suffix is not specified, seconds will be used.
#server.servlet.session.cookie.name= # Session cookie name.
#server.servlet.session.cookie.path= # Path of the session cookie.
#server.servlet.session.cookie.secure= # "Secure" flag for the session cookie.
#server.servlet.session.persistent=false # Whether to persist session data between restarts.
#server.servlet.session.store-dir= # Directory used to store session data.
#server.servlet.session.timeout= # Session timeout. If a duration suffix is not specified, seconds will be used.
#server.servlet.session.tracking-modes= # Session tracking modes (one or more of the following: "cookie", "url", "ssl").
#server.ssl.ciphers= # Supported SSL ciphers.
#server.ssl.client-auth= # Whether client authentication is wanted ("want") or needed ("need"). Requires a trust store.
#server.ssl.enabled= # Enable SSL support.
#server.ssl.enabled-protocols= # Enabled SSL protocols.
#server.ssl.key-alias= # Alias that identifies the key in the key store.
#server.ssl.key-password= # Password used to access the key in the key store.
#server.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file).
#server.ssl.key-store-password= # Password used to access the key store.
#server.ssl.key-store-provider= # Provider for the key store.
#server.ssl.key-store-type= # Type of the key store.
#server.ssl.protocol=TLS # SSL protocol to use.
#server.ssl.trust-store= # Trust store that holds SSL certificates.
#server.ssl.trust-store-password= # Password used to access the trust store.
#server.ssl.trust-store-provider= # Provider for the trust store.
#server.ssl.trust-store-type= # Type of the trust store.
# Undertow access log directory.
#server.undertow.accesslog.dir=
# Whether to enable the access log.
#server.undertow.accesslog.enabled=false
# Format pattern for access logs.
#server.undertow.accesslog.pattern=common
# Log file name prefix.
#server.undertow.accesslog.prefix=access_log.
# Whether to enable access log rotation.
#server.undertow.accesslog.rotate=true
# Log file name suffix.
#server.undertow.accesslog.suffix=log
# Size of each buffer, in bytes.
#server.undertow.buffer-size=2048
# Allocate buffers outside the Java heap. The default is derived from the maximum amount of memory
# that is available to the JVM.
#server.undertow.direct-buffers=512
# Whether servlet filters should be initialized on startup.
#server.undertow.eager-filter-init=true
# Number of I/O threads to create for the worker. The default is derived from the number of available processors.
#server.undertow.io-threads=
# Maximum size in bytes of the HTTP post content. When the value is -1, the default, the size is unlimited.
#server.undertow.max-http-post-size=-1
# Number of worker threads. The default is 8 times the number of I/O threads.
#server.undertow.worker-threads=

# ===================================================================
# JACKSON (JacksonProperties)
# ===================================================================
# Date format string or a fully-qualified date format class name.
# For instance, `yyyy-MM-dd HH:mm:ss`.
#spring.jackson.date-format=yyyy-MM-dd HH:mm:ss.SSS
# Controls the inclusion of properties during serialization.
# Configured with one of the values in Jackson's JsonInclude.Include enumeration.
#spring.jackson.default-property-inclusion=
# Jackson on/off features that affect the way Java objects are deserialized.
#spring.jackson.deserialization.*=
# Jackson on/off features for generators.
#spring.jackson.generator.*=
# Joda date time format string. If not configured, "date-format" is used as a fallback
# if it is configured with a format string.
#spring.jackson.joda-date-time-format=
# Locale used for formatting.
#spring.jackson.locale=
# Jackson general purpose on/off features.
#spring.jackson.mapper.*=
# Jackson on/off features for parsers.
#spring.jackson.parser.*=
# One of the constants on Jackson's PropertyNamingStrategy. Can also be
# a fully-qualified class name of a PropertyNamingStrategy subclass.
#spring.jackson.property-naming-strategy=
# Jackson on/off features that affect the way Java objects are serialized.
#spring.jackson.serialization.*=
# Time zone used when formatting dates. For instance, "America/Los_Angeles" or "GMT+10".
#spring.jackson.time-zone=

# ===================================================================
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# ===================================================================
# Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
# Spring Boot 2.0 includes HikariDataSource by default
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource

spring.datasource.url=jdbc:oracle:thin:@//192.168.8.36:1521/pdm
spring.datasource.username=npdm
spring.datasource.password=bistel01
spring.datasource.pool-prepared-statements = true
spring.datasource.max-open-prepared-statements = 250

# Hikari specific settings
# Note: Spring Boot auto-configuration users, you need to use jdbcUrl-based configuration.
#spring.datasource.hikari.jdbcUrl=jdbc:oracle:thin:@//192.168.8.36:1521/pdm
#spring.datasource.hikari.username=npdm
#spring.datasource.hikari.password=bistel01
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=10
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000


# Whether to stop if an error occurs while initializing the database.
#spring.datasource.continue-on-error=false
# Data (DML) script resource references.
#spring.datasource.data=
# Username of the database to execute DML scripts (if different).
#spring.datasource.data-username=
# Password of the database to execute DML scripts (if different).
#spring.datasource.data-password=
# Commons DBCP2 specific settings
#spring.datasource.dbcp2.*=
# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
#spring.datasource.driver-class-name=
# Whether to generate a random datasource name.
#spring.datasource.generate-unique-name=false
# Initialize the datasource with available DDL and DML scripts.
#spring.datasource.initialization-mode=embedded
# Whether to enable JMX support (if provided by the underlying pool).
#spring.datasource.jmx-enabled=false
# JNDI location of the datasource. Class, url, username & password are ignored when set.
#spring.datasource.jndi-name=
# Name of the datasource. Default to "testdb" when using an embedded database.
#spring.datasource.name=
# Login password of the database.
#spring.datasource.password=
# Platform to use in the DDL or DML scripts (such as schema-${platform}.sql or data-${platform}.sql).
#spring.datasource.platform=all
# Schema (DDL) script resource references.
#spring.datasource.schema=
# Username of the database to execute DDL scripts (if different).
#spring.datasource.schema-username=
# Password of the database to execute DDL scripts (if different).
#spring.datasource.schema-password=
# Statement separator in SQL initialization scripts.
#spring.datasource.separator=;
# SQL scripts encoding.
#spring.datasource.sql-script-encoding=
# Tomcat datasource specific settings
#spring.datasource.tomcat.*=

# JDBC URL of the database.
#spring.datasource.url=
# Login username of the database.
#spring.datasource.username=
# XA datasource fully qualified name.
#spring.datasource.xa.data-source-class-name=
# Properties to pass to the XA data source.
#spring.datasource.xa.properties=

# ===================================================================
# Mybatis (Mybatis-config.xml)
# ===================================================================
mybatis.config-location=classpath:mybatis-config.xml

#mybatis.type-aliases-package=com.bistel.pdm.web.domain
#mybatis.type-handlers-package=com.bistel.pdm.web.handler
#mybatis.configuration.map-underscore-to-camel-case=true
#mybatis.configuration.default-fetch-size=100
#mybatis.configuration.default-statement-timeout=30

# ===================================================================
# JMX
# ===================================================================
# JMX domain name.
#spring.jmx.default-domain=
# Expose management beans to the JMX domain.
#spring.jmx.enabled=true
# MBeanServer bean name.
#spring.jmx.server=mbeanServer

# JOOQ (JooqProperties)
#spring.jooq.sql-dialect= # SQL dialect to use. Auto-detected by default.

# JDBC (JdbcProperties)
#spring.jdbc.template.fetch-size=-1 # Number of rows that should be fetched from the database when more rows are needed.
#spring.jdbc.template.max-rows=-1 # Maximum number of rows.
#spring.jdbc.template.query-timeout= # Query timeout. Default is to use the JDBC driver's default configuration. If a duration suffix is not specified, seconds will be used.

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
#spring.data.jpa.repositories.enabled=true # Whether to enable JPA repositories.
#spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
#spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
#spring.jpa.generate-ddl=false # Whether to initialize the schema on startup.
#spring.jpa.hibernate.ddl-auto= # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" when using an embedded database and no schema manager was detected. Otherwise, defaults to "none".
#spring.jpa.hibernate.naming.implicit-strategy= # Fully qualified name of the implicit naming strategy.
#spring.jpa.hibernate.naming.physical-strategy= # Fully qualified name of the physical naming strategy.
#spring.jpa.hibernate.use-new-id-generator-mappings= # Whether to use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#spring.jpa.mapping-resources= # Mapping resources (equivalent to "mapping-file" entries in persistence.xml).
#spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#spring.jpa.properties.*= # Additional native properties to set on the JPA provider.
#spring.jpa.show-sql=false # Whether to enable logging of SQL statements.

# FLYWAY (FlywayProperties)
#spring.flyway.baseline-description= #
#spring.flyway.baseline-on-migrate= #
#spring.flyway.baseline-version=1 # Version to start migration
#spring.flyway.check-location=true # Whether to check that migration scripts location exists.
#spring.flyway.clean-disabled= #
#spring.flyway.clean-on-validation-error= #
#spring.flyway.dry-run-output= #
#spring.flyway.enabled=true # Whether to enable flyway.
#spring.flyway.encoding= #
#spring.flyway.error-handlers= #
#spring.flyway.group= #
#spring.flyway.ignore-future-migrations= #
#spring.flyway.ignore-missing-migrations= #
#spring.flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it.
#spring.flyway.installed-by= #
#spring.flyway.locations=classpath:db/migration # The locations of migrations scripts.
#spring.flyway.mixed= #
#spring.flyway.out-of-order= #
#spring.flyway.password= # JDBC password to use if you want Flyway to create its own DataSource.
#spring.flyway.placeholder-prefix= #
#spring.flyway.placeholder-replacement= #
#spring.flyway.placeholder-suffix= #
#spring.flyway.placeholders.*= #
#spring.flyway.repeatable-sql-migration-prefix= #
#spring.flyway.schemas= # schemas to update
#spring.flyway.skip-default-callbacks= #
#spring.flyway.skip-default-resolvers= #
#spring.flyway.sql-migration-prefix=V #
#spring.flyway.sql-migration-separator= #
#spring.flyway.sql-migration-suffix=.sql #
#spring.flyway.sql-migration-suffixes= #
#spring.flyway.table= #
#spring.flyway.target= #
#spring.flyway.undo-sql-migration-prefix= #
#spring.flyway.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.
#spring.flyway.user= # Login user of the database to migrate.
#spring.flyway.validate-on-migrate= #

# QUARTZ SCHEDULER (QuartzProperties)
#spring.quartz.jdbc.comment-prefix=-- # Prefix for single-line comments in SQL initialization scripts.
#spring.quartz.jdbc.initialize-schema=embedded # Database schema initialization mode.
#spring.quartz.jdbc.schema=classpath:org/quartz/impl/jdbcjobstore/tables_@@platform@@.sql # Path to the SQL file to use to initialize the database schema.
#spring.quartz.job-store-type=memory # Quartz job store type.
#spring.quartz.properties.*= # Additional Quartz Scheduler properties.