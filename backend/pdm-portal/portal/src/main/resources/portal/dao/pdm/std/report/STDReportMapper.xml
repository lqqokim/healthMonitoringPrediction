<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bistel.a3.portal.dao.pdm.std.report.STDReportMapper">
    <select id="selectReportAlarm" resultType="com.bistel.a3.portal.domain.pdm.db.ReportAlarm">
        select
            a.*,
            b.name as eqp_name
        from report_alarm_trx_pdm a
            join eqp_pdm b
                on a.eqp_id = b.eqp_id
        where a.occur_dtts <![CDATA[>=]]> #{fromdate}
          and a.occur_dtts <![CDATA[<]]> #{todate}
    </select>
    <select id="selectReportAlarmByEqpId" resultType="com.bistel.a3.portal.domain.pdm.MaintenanceHst">
        select
            a.eqp_id,
            a.occur_dtts as eventdate,
            a.cause1 as failuretype,
            a.cause2 as failurecomments1,
            a.cause3 as failurecomments2
        from report_alarm_trx_pdm a
        where 1=1
        <if test="eqp_id != null">
            and a.eqp_id = #{eqp_id}
        </if>
        and a.occur_dtts <![CDATA[>=]]> #{fromdate}
        and a.occur_dtts <![CDATA[<]]> #{todate}
    </select>

    <update id="updateReportAlarm" databaseId="oracle">
        update report_alarm_trx_pdm
        <set>
            <if test="write_dtts != null">write_dtts=#{write_dtts},</if>
            <if test="state_cd != null">state_cd=#{state_cd},</if>
            <if test="request_dtts != null">request_dtts=#{request_dtts},</if>
            <if test="request_user_id != null">request_user_id=#{request_user_id},</if>
            <if test="complete_dtts != null">complete_dtts=#{complete_dtts},</if>
            <if test="complete_user_id != null">complete_user_id=#{complete_user_id},</if>
            <if test="cause_update != null">cause_update=#{cause_update},</if>
            <if test="content != null">content=#{content},</if>
        </set>
        where eqp_id = #{eqp_id}
        and occur_dtts = #{occur_dtts}
    </update>

    <insert id="insertReportAlarm">
        insert into report_alarm_trx_pdm (eqp_id,occur_dtts,score,write_dtts,complete_dtts,request_dtts,state_cd,request_user_id,cause1,cause2,cause3,param_id,measure_trx_id,content)
        values (#{eqp_id,jdbcType=NUMERIC},#{occur_dtts,jdbcType=TIMESTAMP},#{score,jdbcType=FLOAT},#{write_dtts,jdbcType=TIMESTAMP},#{complete_dtts,jdbcType=TIMESTAMP},#{request_dtts,jdbcType=TIMESTAMP},#{state_cd,jdbcType=CHAR},#{request_user_id,jdbcType=VARCHAR},#{cause1,jdbcType=VARCHAR},#{cause2,jdbcType=VARCHAR},#{cause3,jdbcType=CLOB},#{param_id,jdbcType=NUMERIC},#{measure_trx_id,jdbcType=NUMERIC},#{content,jdbcType=CLOB})
    </insert>

    <delete id="deleteReportAlarm">
        delete from report_alarm_trx_pdm
        where eqp_id = #{eqp_id}
          and occur_dtts = #{occur_dtts}
    </delete>

    <insert id="insertBatchJobHst" databaseId="oracle">
        insert into batch_job_hst_pdm(job_dtts, job_cd, eqp_id, job_status_cd, job_type_cd, update_dtts, update_by)
        values(#{job_dtts}, #{job_cd}, #{eqp_id,jdbcType=NUMERIC}, #{job_status_cd}, #{job_type_cd}, systimestamp, #{update_user_id})
    </insert>
    <insert id="insertBatchJobHst" databaseId="postgresql">
        insert into batch_job_hst_pdm(job_dtts, job_cd, eqp_id, job_status_cd, job_type_cd, update_dtts, update_by)
        values(#{job_dtts}, #{job_cd}, #{eqp_id,jdbcType=NUMERIC}, #{job_status_cd}, #{job_type_cd}, localtimestamp, #{update_user_id})
    </insert>

    <delete id="deleteBatchJobHst">
        delete from batch_job_hst_pdm
        where job_dtts = #{job_dtts}
        and job_cd = #{job_cd}
    </delete>

    <!-- TODO: Chris eqp_pdm 테이블 없음  -->
    <resultMap id="EqpStatusMap" type="com.bistel.a3.portal.domain.pdm.EqpStatus">
        <id column="eqp_id" property="eqp_id"/>
        <result column="eqp_name" property="name"/>
        <result column="score" property="score"/>
        <result column="health_variation" property="healthVariation"/>
        <result column="expected_alarm" property="expectedAlarm"/>
        <result column="warning_spec" property="warningSpec"/>
        <result column="alarm_spec" property="alarmSpec"/>
        <result column="cause1" property="cause1"/>
        <result column="cause2" property="cause2"/>
        <result column="cause3" property="cause3"/>
        <association property="multiVariant" javaType="com.bistel.a3.portal.domain.pdm.AlarmCount">
            <result column="multi_alarm" property="alarm"/>
            <result column="multi_warning" property="warning"/>
            <result column="multi_normal" property="normal"/>
        </association>
    </resultMap>
    <select id="selecEqpStatusByEqpId" resultMap="EqpStatusMap">
        select
        a.eqp_id,
        a.eqp_name,
        case when a.warn > 0 then a.max_score else a.score end as score,
        case when a.alarm > 0 then 1 else 0 end as multi_alarm,
        case when a.warn > 0 then 1 else 0 end as multi_warning,
        case when a.alarm = 0 and a.warn = 0 then 1 else 0 end as multi_normal,
        nvl(b.score, 0) - a.score as health_variation,
        a.expected_alarm,
        a.cause1,
        a.cause2,
        a.cause3,
        a.alarm_spec,
        a.warn_spec as warning_spec
        from (
        select
        a.eqp_id,
        a.name as eqp_name,
        rank() over (order by b.score desc) as r,
        max(b.score) over () as max_score,
        avg(b.score) over () as score,
        nvl(sum(b.alarm) over (), 0) as alarm,
        nvl(sum(b.warn) over (), 0) as warn,
        b.expected_alarm,
        b.cause1,
        b.cause2,
        b.cause3,
        c.alarm_spec,
        c.warn_spec
        from eqp_pdm a
        left join health_stat_trx_pdm b
        on a.eqp_id = b.eqp_id
        and b.measure_dtts <![CDATA[>=]]> #{start}
        and b.measure_dtts <![CDATA[<]]> #{end}
        left join health_model_pdm c
        on a.eqp_id = c.eqp_id
        where a.eqp_id = #{eqpId}
        ) a left join (
        select eqp_id, avg(score) as score
        from health_stat_trx_pdm
        where eqp_id = #{eqpId}
        and measure_dtts <![CDATA[>=]]> #{from90}
        and measure_dtts <![CDATA[<]]> #{start}
        group by eqp_id
        ) b on a.eqp_id = b.eqp_id
        where a.r = 1
    </select>

	<!-- TODO: Chris eqp_pdm 테이블 없음  -->
    <resultMap id="AreaStatusMap" type="com.bistel.a3.portal.domain.pdm.AreaWithStatus">
        <id column="area_id" property="area_id"/>
        <result column="name" property="name"/>
        <association property="score" javaType="com.bistel.a3.portal.domain.pdm.Score">
            <result column="p0" property="p0"/>
            <result column="p7" property="p7"/>
            <result column="p8" property="p8"/>
            <result column="p9" property="p9"/>
            <result column="h5" property="h5"/>
            <result column="h2" property="h2"/>
        </association>
    </resultMap>
    <select id="selectAreaStatusByAreaId" resultMap="AreaStatusMap" databaseId="oracle">
        select
        a.area_id,
        a.name,
        p9, p8, p7, p0, h5, h2
        from area_pdm a
        join (
        select
        #{area_id} as area_id,
        nvl(sum(case when max_score <![CDATA[>=]]> 0.9 then 1 else 0 end), 0) as p9,
        nvl(sum(case when max_score <![CDATA[<]]> 0.9 and score <![CDATA[>=]]> 0.8 then 1 else 0 end), 0) as p8,
        nvl(sum(case when max_score <![CDATA[<]]> 0.8 and score <![CDATA[<]]> 0.8 and score <![CDATA[>=]]> 0.7 then 1 else 0 end), 0) as p7,
        nvl(sum(case when max_score <![CDATA[<]]> 0.8 and score <![CDATA[<]]> 0.7 then 1 else 0 end), 0) as p0,
        nvl(sum(case when abs(health_variation) <![CDATA[>=]]>  0.5 then 1 else 0 end), 0) as h5,
        nvl(sum(case when abs(health_variation) <![CDATA[<]]> 0.5 and abs(health_variation) <![CDATA[>=]]> 0.2 then 1 else 0 end), 0) as h2
        from (
        select
        b.eqp_id,
        nvl(max(a.score), 0) as max_score,
        nvl(avg(a.score), 0) as score,
        nvl(avg(a.health_variation), 0) as health_variation
        from eqp_pdm b
        left join health_stat_trx_pdm a
        on a.eqp_id = b.eqp_id
        and a.measure_dtts <![CDATA[>=]]> #{start}
        and a.measure_dtts <![CDATA[<]]> #{end}
        where b.area_id = #{area_id}
        group by b.eqp_id
        )
        ) b on a.area_id = b.area_id
        where a.area_id = #{area_id}
    </select>

	<!-- TODO: Chris eqp_pdm 테이블 없음  -->
    <select id="selectJobHst" resultType="com.bistel.a3.portal.domain.pdm.BatchJobHst" databaseId="oracle">
        select a.*,
        case when a.eqp_id is null then ''
        else (select name from eqp_pdm where eqp_id = a.eqp_id) end as eqp_name
        from batch_job_hst_pdm a
        where a.job_dtts <![CDATA[>=]]> #{start}
        and a.job_dtts <![CDATA[<]]> #{end}
        <if test="job_type_cd != null">
            and a.job_type_cd = #{job_type_cd}
        </if>
        order by a.job_dtts desc
    </select>

	<!-- TODO: Chris param_id 없음 -->
    <insert id="insertCalculateAvg90" databaseId="oracle">
        insert into overall_minute_avg90_trx_pdm (param_id, read_dtts, value)
        select
        param_id,
        #{date},
        avg(value)
        from trace_trx_pdm
        where read_dtts <![CDATA[>=]]> #{before90}
        and read_dtts <![CDATA[<]]> #{date}
        <if test="eqpIds.size > 0">
            AND param_id in (select param_id from param_pdm where eqp_id in
            <foreach collection="eqpIds" item="eqpId" index="index" separator="," open="(" close=")">
                #{eqpId}
            </foreach>
            )
        </if>
        group by param_id
    </insert>
    <!-- TODO: Chris param_id 없음 -->
    <delete id="deleteCalculateAvg90" databaseId="oracle">
        delete from overall_minute_avg90_trx_pdm
        where read_dtts = #{date}
        <if test="eqpIds.size > 0">
            AND param_id in (select param_id from param_pdm where eqp_id in
            <foreach collection="eqpIds" item="eqpId" index="index" separator="," open="(" close=")">
                #{eqpId}
            </foreach>
            )
        </if>
    </delete>

	<!-- TODO: Chris 테이블 없음  -->
    <resultMap id="ParamStatusMap" type="com.bistel.a3.portal.domain.pdm.ParamStatus">
        <id column="param_id" property="param_id"/>
        <result column="param_name" property="name"/>
        <association property="variant" column="param_id" javaType="com.bistel.a3.portal.domain.pdm.AlarmCount">
            <result column="alarm" property="alarm"/>
            <result column="warning" property="warning"/>
            <result column="normal" property="normal"/>
        </association>
        <association property="spec" column="param_id" javaType="com.bistel.a3.portal.domain.pdm.AlarmCount">
            <result column="spec_alarm" property="alarm"/>
            <result column="spec_warning" property="warning"/>
            <result column="spec_normal" property="normal"/>
        </association>
    </resultMap>

    <!-- TODO: Chris 테이블 없음  -->
    <select id="selectParamStatusByEqpId" resultMap="ParamStatusMap">
        select
        n.param_id,
        n.name as param_name,
        nvl(a.alarm, 0) as alarm,
        nvl(a.warn, 0) as warning,
        1 - nvl(a.alarm, 0) - nvl(a.warn, 0) as normal,
        nvl(b.alarm, 0) as spec_alarm,
        nvl(b.warn, 0) as spec_warning,
        1 - nvl(b.alarm, 0) - nvl(b.warn, 0) as spec_normal
        from (
        select *
        from param_pdm
        where eqp_id = #{eqp_id}
        and param_type in (10201,10202)
        ) n
        left join (
        select
        c.param_id,
        sum(case when a.value <![CDATA[>=]]> b.alarm then 1 else 0 end)/sum(1) as alarm,
        sum(case when a.value <![CDATA[<]]> b.alarm and  a.value <![CDATA[>=]]> b.warn then 1 else 0 end)/sum(1) as warn
        from trace_trx_pdm a
        join trace_spec_mst_pdm b
        on a.param_id = b.param_id
        join param_pdm c
        on a.param_id = c.param_id
        where c.eqp_id = #{eqp_id}
        and c.param_type in (10201, 10202)
        and a.read_dtts <![CDATA[>=]]> #{start}
        and a.read_dtts <![CDATA[<]]> #{end}
        group by c.param_id
        ) a on n.param_id = a.param_id
        left join (
        select
        param_id,
        sum(alarm_cnt) as total_cnt,
        sum(case when status_cd = 128 then alarm_cnt else 0 end)/sum(alarm_cnt)/sum(alarm_cnt) as warn,
        sum(case when status_cd = 256 then alarm_cnt else 0 end)/sum(alarm_cnt)/sum(alarm_cnt) as alarm
        from (
        select
        b.param_id,
        b.status_cd,
        count(1) as alarm_cnt
        from param_pdm a
        join alarm_trx_pdm b
        on a.param_id = b.param_id
        where a.eqp_id = #{eqp_id}
        and b.alarm_dtts <![CDATA[>=]]> #{start}
        and b.alarm_dtts <![CDATA[<]]> #{end}
        and a.param_type in (10201, 10202)
        group by b.param_id, b.status_cd
        ) b group by param_id
        ) b on n.param_id = b.param_id
        order by n.sort_order
    </select>

	<!-- TODO: Chris 테이블 없음  -->
    <select id="selectUnivariatevariation" resultType="com.bistel.a3.portal.domain.pdm.UnivariateVariation">
        select
        a.param_id,
        nvl(b.value, 0) - a.today_value as variation
        from (
        select a.param_id, avg(a.value) as today_value
        from trace_trx_pdm a
        join param_pdm b
        on a.param_id = b.param_id
        where b.eqp_id = #{eqp_id}
        and a.read_dtts <![CDATA[>=]]> #{start}
        and a.read_dtts <![CDATA[<]]> #{end}
        group by a.param_id
        ) a left join overall_minute_avg90_trx_pdm b
        on a.param_id = b.param_id
        where b.read_dtts = #{start} - 1
    </select>


    <select id="selectData" resultType="com.bistel.a3.portal.domain.pdm.BasicData">
        select
        event_dtts as x
        , value as y
        , alarm_spec as alarm
        , warning_spec as warn

        from trace_trx_pdm
        where
        param_mst_rawid = #{param_id}
        and event_dtts <![CDATA[>=]]> #{start}
        and event_dtts <![CDATA[<]]> #{end}
        order by event_dtts
    </select>

    <select id="selectFeatureTrend" resultType="com.bistel.a3.portal.domain.pdm.BasicData">

        select
        end_dtts as x,
        mean as y
        from param_feature_trx_pdm
        where
        param_mst_rawid = #{paramId}
        and end_dtts <![CDATA[>=]]> #{fromDate}
        and end_dtts <![CDATA[<]]> #{toDate}
        order by end_dtts

    </select>
    <!-- TODO: Chris param_feature_trx_pdm 테이블 없음 -->
    <select id="selectFeatureData" resultType="com.bistel.a3.portal.domain.pdm.db.ParamFeatureTrx">
        select rawid as rawId,
        param_mst_rawid as paramId,
        begin_dtts as beginDtts,
        end_dtts as endDtts,
        min,
        max,
        median,
        mean,
        stddev,
        q1,
        q3,
        upper_alarm_spec as upperAlarmSpec,
        lower_alarm_spec as lowerAlarmSpec,
        upper_warning_spec as upperWarningSpec,
        lower_warning_spec as lowerWarningSpec,
        target,
        message_group
        from param_feature_trx_pdm
        where
        param_mst_rawid = #{paramId}
        and end_dtts <![CDATA[>=]]> #{fromDate}
        and end_dtts <![CDATA[<]]> #{toDate}
        order by end_dtts
    </select>

    <select id="selectPrevPeriodAVG" resultType="double">
        SELECT
        AVG(value) avg
        FROM
        trace_trx_pdm a,
        ( SELECT
        min * ( avg - min ) / 50 AS lowbound,
        min,
        avg
        FROM
        ( SELECT
        MIN(value) AS min,
        AVG(value) AS avg
        FROM
        trace_trx_pdm
        WHERE param_mst_rawid = #{param_id}
        and event_dtts <![CDATA[>=]]> #{start}
        and event_dtts <![CDATA[<]]> #{end}
        ) min_avg
        ) sts
        where
        a.param_mst_rawid =#{param_id}
        and event_dtts <![CDATA[>=]]> #{start}
        and event_dtts <![CDATA[<]]> #{end}
        AND a.value > sts.lowbound
    </select>

    <select id="selectAlarmWarningEqps" resultType="com.bistel.a3.portal.domain.pdm.EqpStatusData">
        <!--select-->
        <!--a.rawid as eqp_id,-->
        <!--a.area_mst_rawid as area_id,-->
        <!--a.name,-->
        <!--min(b.sum_dtts) as start_dtts,-->
        <!--max(b.status_cd) as status,-->
        <!--max(b.value) as value-->
        <!--from eqp_mst_pdm a-->
        <!--join eqp_alarm_daily_sum_pdm b-->
        <!--on a.rawid = b.eqp_mst_rawid-->
        <!--where-->
        <!--b.sum_dtts <![CDATA[>=]]> #{start}-->
        <!--and b.sum_dtts <![CDATA[<]]> #{end}-->
        <!--<if test="eqpId != null">-->
            <!--and a.rawid = #{eqpId}-->
        <!--</if>-->
        <!--and b.status_cd in (128, 256)-->
        <!--group by a.area_mst_rawid,a.rawid, a.name-->
        <!--order by status desc, value desc-->
    
        select * from
        (
        select
        eqp.area_mst_rawid as area_id,
        eqp_health.EQP_MST_RAWID as eqp_id,
        area.name|| ','  ||eqp.name as name,
        min(eqp_health.SUM_DTTS) as start_dtts,
        max(eqp_health.score) as value,
        case when max(eqp_health.score)>=1 then 'alarm' when max(eqp_health.score) <![CDATA[>=]]> #{globalWarn} then 'warning' end as type,
        case when max(eqp_health.score)>=1 then '256' when max(eqp_health.score) <![CDATA[>=]]> #{globalWarn} then '128' end as status
        from EQP_HEALTH_DAILY_SUM_PDM eqp_health,param_health_mst_pdm param_health,eqp_mst_pdm eqp, area_mst_pdm area
        where eqp_health.param_health_mst_rawid = param_health.rawid
        and area.rawid=eqp.area_mst_rawid
		AND eqp.rawid = eqp_health.eqp_mst_rawid
        AND eqp_health.SUM_DTTS <![CDATA[>=]]> #{start}
        And eqp_health.SUM_DTTS <![CDATA[<]]> #{end}
        AND param_health.health_logic_mst_rawid = 2
        AND eqp.offline_yn='N'
        group by eqp.area_mst_rawid ,
        eqp_health.EQP_MST_RAWID,area.name,eqp.name
        )
        where status in ('256','128')
        order by status desc,value desc
        
    </select>
    
    
    <select id="selectGoodFiveEqps" resultType="com.bistel.a3.portal.domain.pdm.EqpStatusData" databaseId="oracle">
        select area_id ,eqp_id, eqp_name as name, value, start_dtts
        from
        (
        select
        area_id ,eqp_id, eqp_name, abs(value) value, start_dtts
        from
        (
        SELECT area_id, eqp_id, eqp_name, min(VALUE) value, start_dtts
        FROM
        (
        SELECT
        area_id, eqp_id, eqp_name, VALUE, start_dtts
        FROM
        (
        SELECT
        a.rawid AS area_id, e.rawid AS eqp_id, a.name || ',' || e.name as eqp_name,
        (avg(h.today_avg)-avg(h.previous_avg)) as value, MIN(h.sum_dtts) AS start_dtts
        FROM eqp_health_daily_sum_pdm h, param_health_mst_pdm m, eqp_mst_pdm e, area_mst_pdm a
        WHERE e.offline_yn = 'N'
        and   h.sum_dtts <![CDATA[>=]]>  #{start}
        and   h.sum_dtts <![CDATA[<]]>  #{end}
        AND   h.score IS NOT NULL
        AND   h.param_health_mst_rawid = m.rawid
        and   e.rawid=h.eqp_mst_rawid
        and   a.rawid=e.area_mst_rawid
        AND   m.health_logic_mst_rawid = 3
        GROUP BY
        a.rawid, e.rawid, a.name, e.name, m.param_mst_rawid
        )
        where value<![CDATA[<]]> 0.0
        ORDER BY VALUE asc
        ) group by area_id, eqp_id, eqp_name, start_dtts
        ) order by value asc
        ) where value <![CDATA[>=]]> #{threshold}
        order by value desc

    </select>
    <select id="selectGoodFiveEqps" resultType="com.bistel.a3.portal.domain.pdm.EqpStatusData" databaseId="postgresql">
        <!--TODO-->
		SELECT
		*
		FROM
		(
		   SELECT
		   eqp.rawid AS eqp_id,
		   eqp.area_mst_rawid as area_id,
		   eqp.name,
		   c.status_cd
		   FROM
		   (
		      SELECT
		      param.eqp_mst_rawid AS eqp_id,
		      MIN(a.variation) AS variation
		      FROM
		      (
		         SELECT
		         param_mst_rawid AS param_id,
		         AVG(variation / alarm_spec) AS variation
		         FROM trace_daily_sum_pdm
		         WHERE sum_dtts <![CDATA[>=]]> #{start}
		         AND sum_dtts <![CDATA[<]]> #{end}
		         AND variation IS NOT NULL
		         GROUP BY param_mst_rawid
		      )
		      a
		      JOIN param_mst_pdm param ON a.param_id = param.rawid
		      GROUP BY param.eqp_mst_rawid
		   )
		   a
		   JOIN eqp_mst_pdm eqp ON a.eqp_id = eqp.rawid
		   LEFT JOIN
		   (
		      SELECT
		      eqp_mst_rawid AS eqp_id,
		      MAX(status_cd) AS status_cd
		      FROM eqp_alarm_daily_sum_pdm
		      WHERE sum_dtts <![CDATA[>=]]> #{start}
		      AND sum_dtts<![CDATA[<]]> #{end}
		      GROUP BY eqp_mst_rawid
		   )
		   c ON eqp.rawid = c.eqp_id
		   ORDER BY a.variation
		) zzz
		limit 5
    </select>
    
    <select id="selectBadFiveEqps" resultType="com.bistel.a3.portal.domain.pdm.EqpStatusData" databaseId="oracle">
         <!-- -->
        <!--select area_id ,eqp_id, eqp_name as name, value, start_dtts-->
        <!--from-->
        <!--(-->
            <!--select-->
            <!--area_id ,eqp_id, eqp_name, abs(value) value, start_dtts-->
            <!--from-->
            <!--(-->
                <!--SELECT area_id, eqp_id, eqp_name, min(VALUE) value, start_dtts-->
                <!--FROM-->
                <!--(-->
                    <!--SELECT-->
                    <!--area_id, eqp_id, eqp_name, VALUE value, start_dtts-->
                    <!--FROM-->
                    <!--(-->
                        <!--SELECT-->
                        <!--a.rawid AS area_id, e.rawid AS eqp_id, a.name || ',' || e.name as eqp_name,-->
                        <!--avg(h.previous_avg) - avg(h.today_avg) as value, MIN(h.sum_dtts) AS start_dtts-->
                        <!--FROM eqp_health_daily_sum_pdm h, param_health_mst_pdm m, eqp_mst_pdm e, area_mst_pdm a-->
                        <!--WHERE e.offline_yn = 'N'-->
                        <!--and   h.sum_dtts <![CDATA[>=]]>  #{start}-->
                        <!--and   h.sum_dtts <![CDATA[<]]>  #{end}-->
                        <!--AND   h.score IS NOT NULL-->
                        <!--AND   h.param_health_mst_rawid = m.rawid-->
                        <!--and   e.rawid=h.eqp_mst_rawid-->
                        <!--and   a.rawid=e.area_mst_rawid-->
                        <!--AND   m.health_logic_mst_rawid = 3-->
                        <!--GROUP BY a.rawid, e.rawid, a.name, e.name, m.param_mst_rawid-->
                    <!--) ORDER BY VALUE ASC-->
                <!--)-->
                <!--where value <![CDATA[<]]> 0-->
                <!--group by area_id, eqp_id, eqp_name, start_dtts-->
            <!--) order by value desc-->
        <!--)-->
        <!--where value <![CDATA[>=]]> #{threshold}-->

        select area_id ,eqp_id, eqp_name as name, value, start_dtts
        from
        (
        select
        area_id ,eqp_id, eqp_name, abs(value) value, start_dtts
        from
        (
        SELECT area_id, eqp_id, eqp_name, min(VALUE) value, start_dtts
        FROM
        (
        SELECT
        area_id, eqp_id, eqp_name, VALUE value, start_dtts
        FROM
        (
        SELECT
        a.rawid AS area_id, e.rawid AS eqp_id, a.name || ',' || e.name as eqp_name,
        avg(h.previous_avg) - avg(h.today_avg) as value, MIN(h.sum_dtts) AS start_dtts
        FROM eqp_health_daily_sum_pdm h, param_health_mst_pdm m, eqp_mst_pdm e, area_mst_pdm a
        WHERE e.offline_yn = 'N'
        and   h.sum_dtts <![CDATA[>=]]>  #{start}
        and   h.sum_dtts <![CDATA[<]]>  #{end}
        AND   h.score IS NOT NULL
        AND   h.param_health_mst_rawid = m.rawid
        and   e.rawid=h.eqp_mst_rawid
        and   a.rawid=e.area_mst_rawid
        AND   m.health_logic_mst_rawid = 3
        GROUP BY a.rawid, e.rawid, a.name, e.name, m.param_mst_rawid
        ) ORDER BY VALUE ASC
        )
        where value <![CDATA[<]]> 0
        group by area_id, eqp_id, eqp_name, start_dtts
        ) order by value desc
        )
        where value <![CDATA[>=]]> #{threshold}

    </select>
    <select id="selectBadFiveEqps" resultType="com.bistel.a3.portal.domain.pdm.EqpStatusData" databaseId="postgresql">
        <!--TODO-->
		SELECT
		*
		FROM
		(
		   SELECT
		   eqp.rawid AS eqp_id,
		   eqp.area_mst_rawid as area_id,
		   eqp.name,
		   c.status_cd
		   FROM
		   (
			  SELECT
			  param.eqp_mst_rawid AS eqp_id,
			  MAX(a.variation) AS variation
			  FROM
			  (
				 SELECT
				 param_mst_rawid AS param_id,
				 AVG(variation / alarm_spec) AS variation
				 FROM trace_daily_sum_pdm
				 WHERE sum_dtts <![CDATA[>=]]> #{start}
				 AND sum_dtts <![CDATA[<]]> #{end}
				 AND variation IS NOT NULL
				 GROUP BY param_mst_rawid
			  )
			  a
			  JOIN param_mst_pdm param ON a.param_id = param.rawid
			  GROUP BY param.eqp_mst_rawid
		   )
		   a
		   JOIN eqp_mst_pdm eqp ON a.eqp_id = eqp.rawid
		   LEFT JOIN
		   (
			  SELECT
			  eqp_mst_rawid AS eqp_id,
			  MAX(status_cd) AS status_cd
			  FROM eqp_alarm_daily_sum_pdm
			  WHERE sum_dtts <![CDATA[>=]]> #{start}
			  AND sum_dtts <![CDATA[<]]> #{end}
			  GROUP BY eqp_mst_rawid
		   )
		   c ON eqp.rawid = c.eqp_id
		   ORDER BY a.variation DESC
		) zzz
		limit 5
    </select>
    
    
    <select id="selectNumberOfWorstEqps" resultType="com.bistel.a3.portal.domain.pdm.EqpStatusData" databaseId="oracle">
        <!--SELECT-->
        <!--*-->
        <!--FROM-->
        <!--(-->
            <!--SELECT-->
            <!--eqp.rawid AS eqp_id,eqp.area_mst_rawid as area_id,eqp.name,alarm.status_cd-->
            <!--FROM-->
            <!--(-->
               <!--SELECT-->
               <!--param.eqp_mst_rawid AS eqp_id,-->
               <!--MAX(daily.value) AS value-->
               <!--FROM-->
               <!--(-->
                  <!--SELECT-->
                  <!--param_mst_rawid AS param_id,-->
                  <!--AVG(avg_daily / alarm_spec) AS value-->
                  <!--FROM trace_daily_sum_pdm-->
                  <!--WHERE sum_dtts <![CDATA[>=]]> #{start}-->
                  <!--AND sum_dtts <![CDATA[<]]> #{end}-->
                  <!--GROUP BY param_mst_rawid-->
               <!--)-->
               <!--daily-->
               <!--JOIN param_mst_pdm param ON daily.param_id = param.rawid-->
               <!--GROUP BY param.eqp_mst_rawid-->
            <!--)-->
            <!--eqpgroup-->
            <!--JOIN eqp_mst_pdm eqp ON eqpgroup.eqp_id = eqp.rawid-->
            <!--LEFT JOIN-->
            <!--(-->
               <!--SELECT-->
               <!--eqp_mst_rawid AS eqp_id,-->
               <!--MAX(status_cd) AS status_cd-->
               <!--FROM eqp_alarm_daily_sum_pdm-->
               <!--WHERE sum_dtts <![CDATA[>=]]> #{start}-->
               <!--AND sum_dtts <![CDATA[<]]> #{end}-->
               <!--GROUP BY eqp_mst_rawid-->
            <!--)-->
            <!--alarm ON eqp.rawid = alarm.eqp_id-->
            <!--where not exists-->
            <!--(-->
               <!--select-->
                   <!--1-->
               <!--from eqp_alarm_daily_sum_pdm b-->
               <!--where b.sum_dtts <![CDATA[>=]]> #{start}-->
               <!--and b.sum_dtts <![CDATA[<]]> #{end}-->
               <!--and b.status_cd in (128,256)-->
                <!--and eqp.rawid = b.eqp_mst_rawid-->
            <!--)-->
            <!--ORDER BY eqpgroup.value DESC-->
        <!--)-->
        <!--where rownum <![CDATA[<=]]> #{numberOfWorst}-->
    
        select
        area_id,eqp_id,name,status_cd
        from
        (
           select
           eqp.area_mst_rawid as area_id,
           eqp_mst_rawid as eqp_id,
           max(value) as value,
           eqp.name,
           null as status_cd
           from ( select param.eqp_mst_rawid,param_mst_rawid,avg(value/alarm_spec) as value
                    from trace_trx_pdm trx,param_mst_pdm param
                    where event_dtts <![CDATA[>=]]> #{start}
                    and event_dtts  <![CDATA[<]]> #{end}
                    and trx.param_mst_rawid = param.rawid group by param.eqp_mst_rawid,param_mst_rawid ) data,
           eqp_mst_pdm eqp
           where data.eqp_mst_rawid = eqp.rawid
           and not exists
           (
              select
              1
              from eqp_alarm_daily_sum_pdm b
              where b.sum_dtts <![CDATA[>=]]> #{start}
              and b.sum_dtts  <![CDATA[<]]> #{end}
              and b.status_cd in (128,256)
              and eqp.rawid = b.eqp_mst_rawid
           )
           group by eqp.area_mst_rawid,
           eqp_mst_rawid,
           eqp.name
           order by value desc
        )
        where rownum <![CDATA[<=]]> #{numberOfWorst}
        
    </select>
    <select id="selectNumberOfWorstEqps" resultType="com.bistel.a3.portal.domain.pdm.EqpStatusData" databaseId="postgresql">
		select
		area_id,eqp_id,name,status_cd
		from
		(
		   select
		   eqp.area_mst_rawid as area_id,
		   eqp_mst_rawid as eqp_id,
		   max(value) as value,
		   eqp.name,
		   null as status_cd
		   from ( select param.eqp_mst_rawid,param_mst_rawid,avg(value/alarm_spec) as value
					from trace_trx_pdm trx,param_mst_pdm param
					where event_dtts <![CDATA[>=]]> #{start}
					and event_dtts  <![CDATA[<]]> #{end}
					and trx.param_mst_rawid = param.rawid group by param.eqp_mst_rawid,param_mst_rawid ) data,
		   eqp_mst_pdm eqp
		   where data.eqp_mst_rawid = eqp.rawid
		   and not exists
		   (
			  select
			  1
			  from eqp_alarm_daily_sum_pdm b
			  where b.sum_dtts <![CDATA[>=]]> #{start}
			  and b.sum_dtts  <![CDATA[<]]> #{end}
			  and b.status_cd in (128,256)
			  and eqp.rawid = b.eqp_mst_rawid
		   )
		   group by eqp.area_mst_rawid,
		   eqp_mst_rawid,
		   eqp.name
		   order by value desc
		) zzz
		limit #{numberOfWorst}
    </select>


    <select id="selectRadar" resultType="com.bistel.a3.portal.domain.pdm.ParamClassificationData">
        <!--select-->
        <!--a.param_mst_rawid as param_id,-->
        <!--b.name,-->
        <!--avg(a.alarm_spec) as alarm,-->
        <!--avg(a.warning_spec) as warn,-->
        <!--avg(a.avg_period) as avg_spec,-->
        <!--avg(a.avg_daily) as avg_daily,-->
        <!--max(a.avg_oos) as avg_with_aw,-->
        <!--avg(a.variation) as variation-->
        <!--from trace_daily_sum_pdm a-->
        <!--join param_mst_pdm b on a.param_mst_rawid = b.rawid-->
        <!--where b.eqp_mst_rawid = #{eqpId}-->
        <!--and a.sum_dtts <![CDATA[>=]]> #{start}-->
        <!--and a.sum_dtts <![CDATA[<]]> #{end}-->
        <!--group by a.param_mst_rawid, b.name-->
        select
            case when normal.param_id is not null then normal.param_id when oos.param_id is not null then oos.param_id when variation.param_id is not null then variation.param_id end as param_id,
            case when normal.name is not null then normal.name when oos.name is not null then oos.name when variation.name is not null then variation.name end as name,
            case when normal.alarm is not null then normal.alarm when oos.alarm is not null then oos.alarm when variation.alarm is not null then variation.alarm end as alarm,
            case when normal.warn is not null then normal.warn when oos.warn is not null then oos.warn when variation.warn is not null then variation.warn end as warn,
            variation.avg_spec as avg_spec,
            variation.avg_daily as avg_daily,
            oos.avg_daily AS avg_with_aw,
            variation.avg_daily AS variation
        from
            (
            select
                param_health.PARAM_MST_RAWID as param_id,
                param.name,
                avg(eqp_health.score) avg_daily,
                avg(1) as alarm ,
                avg(#{globalWarn}) as warn,
                avg(eqp_health.score)*(#{globalWarn}) as avg_spec
            from EQP_HEALTH_DAILY_SUM_PDM eqp_health,param_health_mst_pdm param_health,param_mst_pdm param
            where
                eqp_health.EQP_MST_RAWID = #{eqpId}
                and eqp_health.sum_dtts <![CDATA[>=]]> #{start}
                and eqp_health.sum_dtts  <![CDATA[<]]> #{end}
                and eqp_health.param_health_mst_rawid = param_health.rawid
                and param_health.health_logic_mst_rawid=1
                and param_health.PARAM_MST_RAWID = param.rawid
            group by param_health.PARAM_MST_RAWID,name
            ) normal
            full outer join
            (
            select
                param_health.PARAM_MST_RAWID as param_id,
                param.name,
                max(eqp_health.score) avg_daily,
                avg(1) as alarm ,
                avg(#{globalWarn}) as warn,
                max(eqp_health.score)*(#{globalWarn}) as avg_spec
            from EQP_HEALTH_DAILY_SUM_PDM eqp_health,param_health_mst_pdm param_health,param_mst_pdm param
            where
                eqp_health.EQP_MST_RAWID = #{eqpId}
                and eqp_health.sum_dtts <![CDATA[>=]]> #{start}
                and eqp_health.sum_dtts  <![CDATA[<]]> #{end}
                and eqp_health.param_health_mst_rawid = param_health.rawid
                and param_health.health_logic_mst_rawid=2
                and param_health.PARAM_MST_RAWID = param.rawid
            group by param_health.PARAM_MST_RAWID,name
            ) oos
            on normal.param_id = oos.param_id
            full outer join
            (
            select
                param_health.PARAM_MST_RAWID as param_id,
                param.name,
                <!-- avg(eqp_health.score) avg_daily, -->
                avg(eqp_health.today_avg) avg_daily,
                avg(1) as alarm ,
                avg(#{globalWarn}) as warn,
                avg(eqp_health.previous_avg) as avg_spec
            from EQP_HEALTH_DAILY_SUM_PDM eqp_health,param_health_mst_pdm param_health,param_mst_pdm param
            where
                eqp_health.EQP_MST_RAWID = #{eqpId}
                and eqp_health.sum_dtts <![CDATA[>=]]> #{start}
                and eqp_health.sum_dtts  <![CDATA[<]]> #{end}
                and eqp_health.param_health_mst_rawid = param_health.rawid
                and param_health.health_logic_mst_rawid=3
                and param_health.PARAM_MST_RAWID = param.rawid
            group by param_health.PARAM_MST_RAWID,name
            ) variation
            on oos.param_id = variation.param_id
        
        
    </select>
    <select id="selectDailyAnalysisCause" resultType="java.util.HashMap">
        select
        a.param_mst_rawid as param_id,
        b.name,
        a.cause
        from trace_daily_sum_pdm a
        join param_mst_pdm b on a.param_mst_rawid = b.rawid
        where b.eqp_mst_rawid = #{eqpId}
        and a.sum_dtts <![CDATA[>=]]> #{start}
        and a.sum_dtts <![CDATA[<]]> #{end}
        
    </select>
     <select id="selectExpectedAlarmWarningEqps" resultType="java.lang.Long">
        select
        param.eqp_mst_rawid
        from ( select param_mst_rawid,count(1) as count
                from trace_trx_pdm
                where event_dtts <![CDATA[>=]]> #{start}
                    and event_dtts <![CDATA[<]]> #{end}
                    and value <![CDATA[>=]]>  warning_spec
                group by param_mst_rawid ) data,
            param_mst_pdm param
        where count <![CDATA[>]]>  #{rmsOverCount}
        and data.param_mst_rawid = param.rawid
        group by param.eqp_mst_rawid
        
    </select>

    <delete id="deleteSummaryTrx">
        delete from trace_daily_sum_pdm
        where param_mst_rawid = #{param_id}
        and sum_dtts = #{read_dtts}
    </delete>
    <delete id="deleteDailySummaryTrxByEqpId">
        delete from trace_daily_sum_pdm
        where param_mst_rawid in (select rawid from param_mst_pdm where eqp_mst_rawid =#{eqpId})
        and sum_dtts  <![CDATA[>=]]> #{start}
        and sum_dtts  <![CDATA[<]]> #{end}
    </delete>
    
    <insert id="insertSummaryTrx" databaseId="oracle">
        insert into trace_daily_sum_pdm(rawid,param_mst_rawid,alarm_spec,warning_spec,sum_dtts,
            avg_period,avg_daily,avg_oos,variation,cause,
            create_by,create_dtts)
        values (seq_trace_daily_sum_pdm.nextval, #{param_id}, #{alarm,jdbcType=FLOAT}, #{warn,jdbcType=FLOAT}, #{read_dtts},
            #{avg_spec,jdbcType=FLOAT}, #{avg_daily,jdbcType=FLOAT}, #{avg_with_aw,jdbcType=FLOAT}, #{variation,jdbcType=FLOAT}, #{cause,jdbcType=VARCHAR},
            #{userName},systimestamp)
    </insert>
    <insert id="insertSummaryTrx" databaseId="postgresql">
        insert into trace_daily_sum_pdm(rawid,param_mst_rawid,alarm_spec,warning_spec,sum_dtts,
            avg_period,avg_daily,avg_oos,variation,cause,
            create_by,create_dtts)
        values (nextval('seq_trace_daily_sum_pdm'), #{param_id}, #{alarm,jdbcType=FLOAT}, #{warn,jdbcType=FLOAT}, #{read_dtts},
            #{avg_spec,jdbcType=FLOAT}, #{avg_daily,jdbcType=FLOAT}, #{avg_with_aw,jdbcType=FLOAT}, #{variation,jdbcType=FLOAT}, #{cause,jdbcType=VARCHAR},
            #{userName},localtimestamp)
    </insert>

     <select id="selectHealthIndexTrend" resultType="com.bistel.a3.portal.domain.pdm.BasicData">
        
		<!-- HQ -->
		<!-- select -->
        <!-- trx.create_dtts as x -->
        <!-- , score*upper_alarm_spec as y -->
        <!-- , upper_alarm_spec as alarm -->
        <!-- , upper_warning_spec as warn -->

        <!-- from param_health_trx_pdm trx,param_health_mst_pdm mst -->
        <!-- where -->
        <!-- trx.param_mst_rawid = #{paramId} -->
        <!-- and trx.create_dtts <![CDATA[>=]]> #{fromDate} -->
        <!-- and trx.create_dtts <![CDATA[<]]> #{toDate} -->
        <!--  and trx.param_health_mst_rawid = mst.rawid -->
         <!-- and mst.param_mst_rawid = trx.param_mst_rawid -->
         <!-- and mst.health_logic_mst_rawid =2 -->
        <!-- order by trx.create_dtts -->



		select
        trx.create_dtts as x
         , score as y
        <!--, score*upper_alarm_spec as y-->
        <!--, upper_alarm_spec as alarm-->
        <!--, upper_warning_spec as warn-->
         , 1 as alarm
         , 0.8 as warn
        from param_health_trx_pdm trx,param_health_mst_pdm mst
        where
        trx.param_mst_rawid = #{paramId}
        and trx.create_dtts <![CDATA[>=]]> #{fromDate} <!-- -90-->
        and trx.create_dtts <![CDATA[<]]> #{toDate}
         and trx.param_health_mst_rawid = mst.rawid
         and mst.param_mst_rawid = trx.param_mst_rawid
         and mst.health_logic_mst_rawid =2
        order by trx.create_dtts

        
    </select>
    
</mapper>