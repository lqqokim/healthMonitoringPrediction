<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bistel.a3.portal.dao.pdm.std.summary.STDSummaryMapper">


    <select id="selectSummaryData" resultType="com.bistel.a3.portal.domain.pdm.BasicData">
        select
        end_dtts as x
        , mean as y
        , UPPER_ALARM_SPEC as upper_alarm
        , upper_warning_spec as upper_warn
        , lower_alarm_spec as lower_alarm
        , lower_warning_spec as lower_warn
        from PARAM_FEATURE_TRX_PDM
        where
        param_mst_rawid =  #{param_id}
        and end_dtts  <![CDATA[>=]]> #{fromdate}
        and end_dtts  <![CDATA[<]]> #{todate}
        order by end_dtts
    </select>

    <select id="selectStatusCountSummary" resultType="com.bistel.a3.portal.domain.pdm.AreaFaultCountSummary"  databaseId="oracle">
        select area_mst_pdm.rawid as area_id, areaeqp.area_name, areaeqp.total_count, areaeqp.eqp_offline as offline_count, areaeqp.alarm_count, areaeqp.warning_count, areaeqp.normal_count
        from

        (

        select area_name, total_count, eqp_offline, alarm_count, warning_count, total_count-(eqp_offline+alarm_count+warning_count) as normal_count
        from
        (

        select total.areagroupname as area_name, total.eqp_total_count as total_count,(total.eqp_total_count-eqponline.eqp_online) as eqp_offline , aw.alarm_count as alarm_count, aw.warning_count as warning_count
        from
        (
        select areagroupname, count(eqp_mst_rawid) as eqp_total_count
        from
        (
        select areagroupname,area_id as area_mst_rawid ,eqp.name as eqp_name, eqp.rawid as eqp_mst_rawid, eqp.offline_yn
        from eqp_mst_pdm eqp,
        (
        select * from
        (SELECT
        name as areagroupname,
        rawid AS area_id,
        level,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        where level=2
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        )
        where leaf =1
        union all
        SELECT
        areagroup.name as  areagroupname,
        area.rawid AS area_id,
        level,
        area.name,
        area.parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm area,
        (
        SELECT
        rawid AS area_id,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        where level=2
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        ) areagroup

        START WITH
        area.parent_rawid = areagroup.area_id
        CONNECT BY
        PRIOR area.rawid = area.parent_rawid
        ) area_info
        where eqp.area_mst_rawid = area_info.area_id
        order by areagroupname desc
        )
        group by areagroupname

        ) total,

        (
        select  areagroupname, count(eqp_offline_yn) as eqp_online
        from
        (
        select areagroupname,area_id as area_mst_rawid ,eqp.name as eqp_name, eqp.rawid as eqp_mst_rawid, eqp.offline_yn as eqp_offline_yn
        from eqp_mst_pdm eqp,
        (
        select * from
        (SELECT
        name as areagroupname,
        rawid AS area_id,
        level,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        where level=2
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        )
        where leaf =1
        union all
        SELECT
        areagroup.name as  areagroupname,
        area.rawid AS area_id,
        level,
        area.name,
        area.parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm area,
        (
        SELECT
        rawid AS area_id,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        where level=2
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        ) areagroup

        START WITH
        area.parent_rawid = areagroup.area_id
        CONNECT BY
        PRIOR area.rawid = area.parent_rawid
        ) area_info
        where eqp.area_mst_rawid = area_info.area_id
        order by areagroupname desc

        )
        where 1=1
        and eqp_offline_yn='N'
        group by areagroupname

        ) eqponline,



        (

        select areagroupname, alarm_count, warning_count
        from
        (

        select area_alarm_count.areagroupname as areagroupname, area_alarm_count.alarm_count as alarm_count, area_warning_count.warning_count as warning_count
        from
        (

        select areagroupname, count(alarm_count) alarm_count
        from
        (

        select Area_eqp_list.area_mst_rawid, Area_eqp_list.areagroupname, Area_eqp_list.eqp_mst_rawid, Area_eqp_list.eqp_name, specout_eqp.alarm_count alarm_count
        from
        (
        select eqp_mst_rawid, alarm_count
        from
        (
        select specout.eqp_mst_rawid as eqp_mst_rawid , nvl(alarm.alarm_count,0) as alarm_count
        from
        (
        select eqp_mst_rawid,count(status_cd) as total_count
        from eqp_alarm_daily_sum_pdm
        where 1=1
        and sum_dtts <![CDATA[>=]]> #{fromdate}
        and sum_dtts <![CDATA[<]]> #{todate}
        group by eqp_mst_rawid
        ) specout,
        (
        select eqp_mst_rawid,count(status_cd) as alarm_count
        from eqp_alarm_daily_sum_pdm
        where 1=1
        and sum_dtts <![CDATA[>=]]> #{fromdate}
        and sum_dtts <![CDATA[<]]> #{todate}
        and status_cd=256
        group by eqp_mst_rawid
        ) alarm
        where 1=1
        and alarm.eqp_mst_rawid(+)=specout.eqp_mst_rawid
        )
        )specout_eqp,



        (select areagroupname, area_mst_rawid, eqp_name, eqp_mst_rawid
        from
        (
        select areagroupname,area_id as area_mst_rawid,eqp.name as eqp_name ,eqp.rawid as eqp_mst_rawid
        from eqp_mst_pdm eqp,
        (
        select * from
        (SELECT
        name as areagroupname,
        rawid AS area_id,
        level,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        where level=2
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        )
        where leaf =1
        union all
        SELECT
        areagroup.name as  areagroupname,
        area.rawid AS area_id,
        level,
        area.name,
        area.parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm area,
        (
        SELECT
        rawid AS area_id,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        where level=2
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        ) areagroup
        START WITH
        area.parent_rawid = areagroup.area_id
        CONNECT BY
        PRIOR area.rawid = area.parent_rawid
        ) area_info
        where eqp.area_mst_rawid = area_info.area_id
        order by areagroupname desc
        )
        )Area_eqp_list
        where 1=1
        and specout_eqp.eqp_mst_rawid=Area_eqp_list.eqp_mst_rawid


        )
        where 1=1
        and alarm_count>0
        group by areagroupname

        ) area_alarm_count,


        (
        select areagroupname, count(alarm_count) as warning_count
        from
        (

        select Area_eqp_list.area_mst_rawid, Area_eqp_list.areagroupname, Area_eqp_list.eqp_mst_rawid, Area_eqp_list.eqp_name, specout_eqp.alarm_count alarm_count
        from
        (
        select eqp_mst_rawid, alarm_count
        from
        (
        select specout.eqp_mst_rawid as eqp_mst_rawid , nvl(alarm.alarm_count,0) as alarm_count
        from
        (
        select eqp_mst_rawid,count(status_cd) as total_count
        from eqp_alarm_daily_sum_pdm
        where 1=1
        and sum_dtts <![CDATA[>=]]> #{fromdate}
        and sum_dtts <![CDATA[<]]> #{todate}
        group by eqp_mst_rawid
        ) specout,
        (
        select eqp_mst_rawid,count(status_cd) as alarm_count
        from eqp_alarm_daily_sum_pdm
        where 1=1
        and sum_dtts <![CDATA[>=]]> #{fromdate}
        and sum_dtts <![CDATA[<]]> #{todate}
        and status_cd=256
        group by eqp_mst_rawid
        ) alarm
        where 1=1
        and alarm.eqp_mst_rawid(+)=specout.eqp_mst_rawid
        )
        )specout_eqp,



        (select areagroupname, area_mst_rawid, eqp_name, eqp_mst_rawid
        from
        (
        select areagroupname,area_id as area_mst_rawid,eqp.name as eqp_name ,eqp.rawid as eqp_mst_rawid
        from eqp_mst_pdm eqp,
        (
        select * from
        (SELECT
        name as areagroupname,
        rawid AS area_id,
        level,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        where level=2
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        )
        where leaf =1
        union all
        SELECT
        areagroup.name as  areagroupname,
        area.rawid AS area_id,
        level,
        area.name,
        area.parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm area,
        (
        SELECT
        rawid AS area_id,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        where level=2
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        ) areagroup
        START WITH
        area.parent_rawid = areagroup.area_id
        CONNECT BY
        PRIOR area.rawid = area.parent_rawid
        ) area_info
        where eqp.area_mst_rawid = area_info.area_id
        order by areagroupname desc
        )
        )Area_eqp_list
        where 1=1
        and specout_eqp.eqp_mst_rawid=Area_eqp_list.eqp_mst_rawid


        )
        where 1=1
        and alarm_count=0
        group by areagroupname


        ) area_warning_count

        where 1=1
        and area_alarm_count.areagroupname(+)=area_warning_count.areagroupname

        )

        ) aw

        where 1=1
        and total.areagroupname=eqponline.areagroupname
        and eqponline.areagroupname=aw.areagroupname
        )


        ) areaeqp,
        area_mst_pdm
        where areaeqp.area_name=AREA_MST_PDM.NAME

    </select>
    <select id="selectStatusCountSummary" resultType="com.bistel.a3.portal.domain.pdm.AreaFaultCountSummary"  databaseId="postgresql">
		SELECT area_mst_pdm.rawid  AS area_id,
		       areaeqp.area_name,
		       areaeqp.total_count,
		       areaeqp.eqp_offline AS offline_count,
		       areaeqp.alarm_count,
		       areaeqp.warning_count,
		       areaeqp.normal_count
		FROM   (SELECT area_name,
		               total_count,
		               eqp_offline,
		               alarm_count,
		               warning_count,
		               total_count - ( eqp_offline + alarm_count + warning_count ) AS 
					   normal_count
		        FROM   (SELECT total.areagroupname                              AS
		                       area_name,
		                       total.eqp_total_count                            AS
		                       total_count,
		                       ( total.eqp_total_count - eqponline.eqp_online ) AS
		                       eqp_offline,
		                       aw.alarm_count                                   AS
		                       alarm_count,
		                       aw.warning_count                                 AS
		                       warning_count
		                FROM   (SELECT areagroupname,
		                               Count(eqp_mst_rawid) AS eqp_total_count
		                        FROM   (SELECT areagroupname,
		                                       area_id   AS area_mst_rawid,
		                                       eqp.name  AS eqp_name,
		                                       eqp.rawid AS eqp_mst_rawid,
		                                       eqp.offline_yn
		                                FROM   eqp_mst_pdm eqp,
										
										
		                                       (SELECT *
												FROM (
													WITH RECURSIVE q AS (
														SELECT area.*, 1 AS LEVEL
														FROM area_mst_pdm area
														WHERE area.parent_rawid = 0
														UNION ALL
														SELECT area.*, LEVEL + 1
														FROM area_mst_pdm area
														JOIN q ON q.rawid=area.parent_rawid
													)
													SELECT name              AS
														   areagroupname,
														   rawid             AS
														   area_id,
														   LEVEL,
														   name,
														   parent_rawid      AS
														   parent_id,
														   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
														   ELSE 1 END AS leaf
													FROM q qq
													WHERE LEVEL = 2
													ORDER  BY leaf, parent_id
												) area_list
												WHERE  leaf = 1
		
												UNION ALL
		
												(
												with recursive area_list (area_id, LEVEL, name, areagroupname, parent_id) as (
													select area.rawid, 1 as level, area.name, areagroup.name, area.parent_rawid
													from area_mst_pdm area, (
																			WITH RECURSIVE q AS (
																				SELECT area.*, 1 AS LEVEL
																				FROM area_mst_pdm area
																				WHERE area.parent_rawid = 0
																				UNION ALL
																				SELECT area.*, LEVEL + 1
																				FROM area_mst_pdm area
																				JOIN q ON q.rawid=area.parent_rawid
																			)
																			SELECT rawid             AS
																				   area_id,
																				   name,
																				   parent_rawid      AS
																				   parent_id, 
																				   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																				   ELSE 1 END AS leaf
																			FROM q qq
																			WHERE LEVEL = 2
																			ORDER  BY leaf, parent_id
																			) areagroup
													where area.parent_rawid = areagroup.area_id
													union all
													select areagroup.area_id, areagroup.level+1, area.name, areagroup.name, areagroup.parent_id
													from area_mst_pdm area, (
																			WITH RECURSIVE q AS (
																				SELECT area.*, 1 AS LEVEL
																				FROM area_mst_pdm area
																				WHERE area.parent_rawid = 0
																				UNION ALL
																				SELECT area.*, LEVEL + 1
																				FROM area_mst_pdm area
																				JOIN q ON q.rawid=area.parent_rawid
																			)
																			SELECT rawid             AS
																				   area_id,
																				   level,
																				   name,
																				   parent_rawid      AS
																				   parent_id, 
																				   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																				   ELSE 1 END AS leaf
																			FROM q qq
																			WHERE LEVEL = 2
																			ORDER  BY leaf, parent_id
																			) areagroup
													JOIN area_list ON area_list.area_id=areagroup.parent_id
												)
												select areagroupname, area_id, level, name, parent_id,
													   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.area_id) > 0 THEN 0
													   ELSE 1 END AS leaf
												from area_list qq
												)
											) area_info
		                                WHERE  eqp.area_mst_rawid = area_info.area_id
		                                ORDER  BY areagroupname DESC) area_eqp_list1
		                        GROUP  BY areagroupname) total,
		                       (SELECT areagroupname,
		                               Count(eqp_offline_yn) AS eqp_online
		                        FROM   (
									    
										SELECT areagroupname,
											   area_id        AS area_mst_rawid,
											   eqp.name       AS eqp_name,
											   eqp.rawid      AS eqp_mst_rawid,
											   eqp.offline_yn AS eqp_offline_yn
										FROM   eqp_mst_pdm eqp, 
																(SELECT *
																	FROM (
																		WITH RECURSIVE q AS (
																			SELECT area.*, 1 AS LEVEL
																			FROM area_mst_pdm area
																			WHERE area.parent_rawid = 0
																			UNION ALL
																			SELECT area.*, LEVEL + 1
																			FROM area_mst_pdm area
																			JOIN q ON q.rawid=area.parent_rawid
																		)
																		SELECT name              AS
																			   areagroupname,
																			   rawid             AS
																			   area_id,
																			   LEVEL,
																			   name,
																			   parent_rawid      AS
																			   parent_id,
																			   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																			   ELSE 1 END AS leaf
																		FROM q qq
																		WHERE LEVEL = 2
																		ORDER  BY leaf, parent_id
																	) area_list
																	WHERE  leaf = 1
		
																	UNION ALL
		
																	(
																	with recursive area_list (area_id, LEVEL, name, areagroupname, parent_id) as (
																		select area.rawid, 1 as level, area.name, areagroup.name, area.parent_rawid
																		from area_mst_pdm area, (
																								WITH RECURSIVE q AS (
																									SELECT area.*, 1 AS LEVEL
																									FROM area_mst_pdm area
																									WHERE area.parent_rawid = 0
																									UNION ALL
																									SELECT area.*, LEVEL + 1
																									FROM area_mst_pdm area
																									JOIN q ON q.rawid=area.parent_rawid
																								)
																								SELECT rawid             AS
																									   area_id,
																									   name,
																									   parent_rawid      AS
																									   parent_id, 
																									   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																									   ELSE 1 END AS leaf
																								FROM q qq
																								WHERE LEVEL = 2
																								ORDER  BY leaf, parent_id
																								) areagroup
																		where area.parent_rawid = areagroup.area_id
																		union all
																		select areagroup.area_id, areagroup.level+1, area.name, areagroup.name, areagroup.parent_id
																		from area_mst_pdm area, (
																								WITH RECURSIVE q AS (
																									SELECT area.*, 1 AS LEVEL
																									FROM area_mst_pdm area
																									WHERE area.parent_rawid = 0
																									UNION ALL
																									SELECT area.*, LEVEL + 1
																									FROM area_mst_pdm area
																									JOIN q ON q.rawid=area.parent_rawid
																								)
																								SELECT rawid             AS
																									   area_id,
																									   level,
																									   name,
																									   parent_rawid      AS
																									   parent_id, 
																									   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																									   ELSE 1 END AS leaf
																								FROM q qq
																								WHERE LEVEL = 2
																								ORDER  BY leaf, parent_id
																								) areagroup
																		JOIN area_list ON area_list.area_id=areagroup.parent_id
																	)
																	select areagroupname, area_id, level, name, parent_id,
																		   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.area_id) > 0 THEN 0
																		   ELSE 1 END AS leaf
																	from area_list qq
																	)
																)  area_info
										WHERE  eqp.area_mst_rawid = area_info.area_id
										ORDER  BY areagroupname DESC
										) eqp_area_list
		                        WHERE  1 = 1
		                        AND eqp_offline_yn = 'N'
		                        GROUP  BY areagroupname) eqponline,
		                       (SELECT areagroupname,
		                               alarm_count,
		                               warning_count
		                        FROM   (SELECT area_alarm_count.areagroupname   AS areagroupname,
		                                       area_alarm_count.alarm_count     AS alarm_count,
		                                       area_warning_count.warning_count AS warning_count
		                                FROM   (SELECT areagroupname, Count(alarm_count) alarm_count
		                                        FROM   (SELECT
															   Area_eqp_list.area_mst_rawid,
															   Area_eqp_list.areagroupname,
															   Area_eqp_list.eqp_mst_rawid,
															   Area_eqp_list.eqp_name,
															   specout_eqp.alarm_count
															   alarm_count
		                                                FROM  (SELECT eqp_mst_rawid, alarm_count
		                                                       FROM (SELECT specout.eqp_mst_rawid AS eqp_mst_rawid,
																	 COALESCE(alarm.alarm_count, 0) AS alarm_count
																	 FROM (SELECT eqp_mst_rawid, Count(status_cd) AS total_count
																	       FROM eqp_alarm_daily_sum_pdm
																		   WHERE  1 = 1
																	       and sum_dtts <![CDATA[>=]]> #{fromdate}
																	       and sum_dtts <![CDATA[<]]> #{todate}
																	  GROUP  BY eqp_mst_rawid) specout
																	  left outer join
																	  (SELECT eqp_mst_rawid, Count(status_cd) AS alarm_count
																	  FROM   eqp_alarm_daily_sum_pdm
																	  WHERE  1 = 1
															          and sum_dtts <![CDATA[>=]]> #{fromdate}
															          and sum_dtts <![CDATA[<]]> #{todate}
																	  AND status_cd = 256
																	  GROUP  BY eqp_mst_rawid) alarm
																	  on alarm.eqp_mst_rawid = specout.eqp_mst_rawid) eqp_alarm_count
															    WHERE  1 = 1
															    ) specout_eqp,
															    (SELECT areagroupname,
																	   area_mst_rawid,
																	   eqp_name,
																	   eqp_mst_rawid
															     FROM (
																   
																     SELECT areagroupname,
																	   		area_id   AS area_mst_rawid,
																	   		eqp.name  AS eqp_name,
																	   		eqp.rawid AS eqp_mst_rawid
																	 FROM eqp_mst_pdm eqp,
																						   (SELECT *
																							FROM (
																								WITH RECURSIVE q AS (
																									SELECT area.*, 1 AS LEVEL
																									FROM area_mst_pdm area
																									WHERE area.parent_rawid = 0
																									UNION ALL
																									SELECT area.*, LEVEL + 1
																									FROM area_mst_pdm area
																									JOIN q ON q.rawid=area.parent_rawid
																								)
																								SELECT name              AS
																									   areagroupname,
																									   rawid             AS
																									   area_id,
																									   LEVEL,
																									   name,
																									   parent_rawid      AS
																									   parent_id,
																									   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																									   ELSE 1 END AS leaf
																								FROM q qq
																								WHERE LEVEL = 2
																								ORDER  BY leaf, parent_id
																							) area_list
																							WHERE  leaf = 1
		
																							UNION ALL
		
																							(
																							with recursive area_list (area_id, LEVEL, name, areagroupname, parent_id) as (
																								select area.rawid, 1 as level, area.name, areagroup.name, area.parent_rawid
																								from area_mst_pdm area, (
																														WITH RECURSIVE q AS (
																															SELECT area.*, 1 AS LEVEL
																															FROM area_mst_pdm area
																															WHERE area.parent_rawid = 0
																															UNION ALL
																															SELECT area.*, LEVEL + 1
																															FROM area_mst_pdm area
																															JOIN q ON q.rawid=area.parent_rawid
																														)
																														SELECT rawid             AS
																															   area_id,
																															   name,
																															   parent_rawid      AS
																															   parent_id, 
																															   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																															   ELSE 1 END AS leaf
																														FROM q qq
																														WHERE LEVEL = 2
																														ORDER  BY leaf, parent_id
																														) areagroup
																								where area.parent_rawid = areagroup.area_id
																								union all
																								select areagroup.area_id, areagroup.level+1, area.name, areagroup.name, areagroup.parent_id
																								from area_mst_pdm area, (
																														WITH RECURSIVE q AS (
																															SELECT area.*, 1 AS LEVEL
																															FROM area_mst_pdm area
																															WHERE area.parent_rawid = 0
																															UNION ALL
																															SELECT area.*, LEVEL + 1
																															FROM area_mst_pdm area
																															JOIN q ON q.rawid=area.parent_rawid
																														)
																														SELECT rawid             AS
																															   area_id,
																															   level,
																															   name,
																															   parent_rawid      AS
																															   parent_id, 
																															   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																															   ELSE 1 END AS leaf
																														FROM q qq
																														WHERE LEVEL = 2
																														ORDER  BY leaf, parent_id
																														) areagroup
																								JOIN area_list ON area_list.area_id=areagroup.parent_id
																							)
																							select areagroupname, area_id, level, name, parent_id,
																								   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.area_id) > 0 THEN 0
																								   ELSE 1 END AS leaf
																							from area_list qq
																							)
																						) area_info
															   		  WHERE  eqp.area_mst_rawid = area_info.area_id
															   		  ORDER  BY areagroupname DESC) area_eqp_list2
															    ) Area_eqp_list
													     WHERE  1 = 1
													     AND specout_eqp.eqp_mst_rawid = Area_eqp_list.eqp_mst_rawid) area_areagroup_eqp_alarm
											   WHERE  1 = 1
											   AND alarm_count > 0
											   GROUP  BY areagroupname) area_alarm_count
											   right outer join
											   (SELECT areagroupname,
											   Count(alarm_count) AS warning_count
											   FROM (SELECT Area_eqp_list.area_mst_rawid,
														    Area_eqp_list.areagroupname,
														    Area_eqp_list.eqp_mst_rawid,
														    Area_eqp_list.eqp_name,
														    specout_eqp.alarm_count alarm_count
													 FROM (SELECT eqp_mst_rawid, alarm_count
											   			   FROM (SELECT specout.eqp_mst_rawid AS eqp_mst_rawid, COALESCE(alarm.alarm_count, 0) AS alarm_count
											                     FROM (SELECT eqp_mst_rawid, Count(status_cd) AS total_count
		 									   						   FROM   eqp_alarm_daily_sum_pdm
																	   WHERE  1 = 1
															           and sum_dtts <![CDATA[>=]]> #{fromdate}
															           and sum_dtts <![CDATA[<]]> #{todate}
																	   GROUP  BY eqp_mst_rawid) specout
																 	   left outer join
																	   (SELECT eqp_mst_rawid, Count(status_cd) AS alarm_count
																	    FROM   eqp_alarm_daily_sum_pdm
																	    WHERE  1 = 1
														                and sum_dtts <![CDATA[>=]]> #{fromdate}
															            and sum_dtts <![CDATA[<]]> #{todate}
																	    AND status_cd = '256'
																	    GROUP  BY eqp_mst_rawid) alarm
											                      on alarm.eqp_mst_rawid = specout.eqp_mst_rawid) eqp_alarm_count
														    ) specout_eqp,
											                (SELECT areagroupname,
																    area_mst_rawid,
																    eqp_name,
																    eqp_mst_rawid
															 FROM   (SELECT areagroupname,
															   				area_id   AS area_mst_rawid,
																		    eqp.name  AS eqp_name,
																		    eqp.rawid AS eqp_mst_rawid
															   		 FROM eqp_mst_pdm eqp, 
																						   (SELECT *
																							FROM (
																								WITH RECURSIVE q AS (
																									SELECT area.*, 1 AS LEVEL
																									FROM area_mst_pdm area
																									WHERE area.parent_rawid = 0
																									UNION ALL
																									SELECT area.*, LEVEL + 1
																									FROM area_mst_pdm area
																									JOIN q ON q.rawid=area.parent_rawid
																								)
																								SELECT name              AS
																									   areagroupname,
																									   rawid             AS
																									   area_id,
																									   LEVEL,
																									   name,
																									   parent_rawid      AS
																									   parent_id,
																									   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																									   ELSE 1 END AS leaf
																								FROM q qq
																								WHERE LEVEL = 2
																								ORDER  BY leaf, parent_id
																							) area_list
																							WHERE  leaf = 1
		
																							UNION ALL
		
																							(
																							with recursive area_list (area_id, LEVEL, name, areagroupname, parent_id) as (
																								select area.rawid, 1 as level, area.name, areagroup.name, area.parent_rawid
																								from area_mst_pdm area, (
																														WITH RECURSIVE q AS (
																															SELECT area.*, 1 AS LEVEL
																															FROM area_mst_pdm area
																															WHERE area.parent_rawid = 0
																															UNION ALL
																															SELECT area.*, LEVEL + 1
																															FROM area_mst_pdm area
																															JOIN q ON q.rawid=area.parent_rawid
																														)
																														SELECT rawid             AS
																															   area_id,
																															   name,
																															   parent_rawid      AS
																															   parent_id, 
																															   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																															   ELSE 1 END AS leaf
																														FROM q qq
																														WHERE LEVEL = 2
																														ORDER  BY leaf, parent_id
																														) areagroup
																								where area.parent_rawid = areagroup.area_id
																								union all
																								select areagroup.area_id, areagroup.level+1, area.name, areagroup.name, areagroup.parent_id
																								from area_mst_pdm area, (
																														WITH RECURSIVE q AS (
																															SELECT area.*, 1 AS LEVEL
																															FROM area_mst_pdm area
																															WHERE area.parent_rawid = 0
																															UNION ALL
																															SELECT area.*, LEVEL + 1
																															FROM area_mst_pdm area
																															JOIN q ON q.rawid=area.parent_rawid
																														)
																														SELECT rawid             AS
																															   area_id,
																															   level,
																															   name,
																															   parent_rawid      AS
																															   parent_id, 
																															   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																															   ELSE 1 END AS leaf
																														FROM q qq
																														WHERE LEVEL = 2
																														ORDER  BY leaf, parent_id
																														) areagroup
																								JOIN area_list ON area_list.area_id=areagroup.parent_id
																							)
																							select areagroupname, area_id, level, name, parent_id,
																								   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.area_id) > 0 THEN 0
																								   ELSE 1 END AS leaf
																							from area_list qq
																							)
																						) area_info
															   		 WHERE  eqp.area_mst_rawid = area_info.area_id
															   		 ORDER  BY areagroupname DESC) areagroup_area_eqp
															) Area_eqp_list
												   	 WHERE  1 = 1
												     AND specout_eqp.eqp_mst_rawid = Area_eqp_list.eqp_mst_rawid) area_areagroup_eqp_alram_count
											    WHERE  1 = 1
											    AND alarm_count = 0
											    GROUP  BY areagroupname) area_warning_count
		               					on area_alarm_count.areagroupname = area_warning_count.areagroupname) areagroup_alarm_countd_warning_count
				 				) aw
		         				WHERE  1 = 1
		         		AND total.areagroupname = eqponline.areagroupname
		        		AND eqponline.areagroupname = aw.areagroupname) area_total_eqp_alarm_warning
			   ) areaeqp, area_mst_pdm
		WHERE  areaeqp.area_name = area_mst_pdm.name 
    </select>


    <select id="selectAlarmHistoryAll" resultType="com.bistel.a3.portal.domain.pdm.AlarmHistory" databaseId="oracle">
        select areaeqp.areagroupname as area_name, areaeqp.area_id as area_id,  areaeqp.eqp_mst_rawid as eqp_id  ,areaeqp.eqp_name ,alarmhistory.alarm_dtts, alarmhistory.param_mst_rawid as param_id, alarmhistory.param_name, alarmhistory.category, alarmhistory.fault_class
        from
        (
        select areagroupname,area_id,eqp.name as eqp_name,eqp.rawid as eqp_mst_rawid
        from eqp_mst_pdm eqp,
        (
        select * from
        (SELECT
        name as areagroupname,
        rawid AS area_id,
        level,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        where level=2
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        )
        where leaf =1
        union all
        SELECT
        areagroup.name as  areagroupname,
        area.rawid AS area_id,
        level,
        area.name,
        area.parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm area,
        (
        SELECT
        rawid AS area_id,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        where level=2
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        ) areagroup

        START WITH
        area.parent_rawid = areagroup.area_id
        CONNECT BY
        PRIOR area.rawid = area.parent_rawid
        ) area_info
        where eqp.area_mst_rawid = area_info.area_id
        order by areagroupname desc

        ) areaeqp,



        (
        select alarm_dtts,eqp_mst_rawid, eqp_name, param_mst_rawid, param_name, DECODE(category,'256', 'Alarm','128','Warning') as category, fault_class
        from
        (
        select emp.rawid as eqp_mst_rawid, emp.name as eqp_name, pmp.rawid as param_mst_rawid, pmp.name as param_name, atp.ALARM_TYPE_CD as category, atp.fault_class, atp.ALARM_DTTS as alarm_dtts
        from alarm_trx_pdm atp, eqp_mst_pdm emp, param_mst_pdm pmp
        where 1=1
        and atp.alarm_dtts <![CDATA[>=]]> #{fromdate}
        and atp.alarm_dtts <![CDATA[<]]> #{todate}
        and atp.PARAM_MST_RAWID=pmp.rawid
        and pmp.eqp_mst_rawid=emp.rawid
        )
        ) alarmhistory
        where 1=1
        and alarmhistory.eqp_mst_rawid=areaeqp.eqp_mst_rawid
        order by alarmhistory.alarm_dtts

    </select>
    <select id="selectAlarmHistoryAll" resultType="com.bistel.a3.portal.domain.pdm.AlarmHistory" databaseId="postgresql">
		SELECT   areaeqp.areagroupname AS area_name,
		         areaeqp.area_id       AS area_id,
		         areaeqp.eqp_mst_rawid AS eqp_id ,
		         areaeqp.eqp_name ,
		         alarmhistory.alarm_dtts,
		         alarmhistory.param_mst_rawid AS param_id,
		         alarmhistory.param_name,
		         alarmhistory.category,
		         alarmhistory.fault_class
		FROM     (
		                  SELECT   areagroupname,
		                           area_id,
		                           eqp.name  AS eqp_name,
		                           eqp.rawid AS eqp_mst_rawid
		                  FROM     eqp_mst_pdm eqp,
		                           (SELECT *
									FROM (
										WITH RECURSIVE q AS (
											SELECT area.*, 1 AS LEVEL
											FROM area_mst_pdm area
											WHERE area.parent_rawid = 0
											UNION ALL
											SELECT area.*, LEVEL + 1
											FROM area_mst_pdm area
											JOIN q ON q.rawid=area.parent_rawid
										)
										SELECT name              AS
											   areagroupname,
											   rawid             AS
											   area_id,
											   LEVEL,
											   name,
											   parent_rawid      AS
											   parent_id,
											   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
											   ELSE 1 END AS leaf
										FROM q qq
										WHERE LEVEL = 2
										ORDER  BY leaf, parent_id
									) area_list
									WHERE  leaf = 1
		
									UNION ALL
		
									(
									with recursive area_list (area_id, LEVEL, name, areagroupname, parent_id) as (
										select area.rawid, 1 as level, area.name, areagroup.name, area.parent_rawid
										from area_mst_pdm area, (
																WITH RECURSIVE q AS (
																	SELECT area.*, 1 AS LEVEL
																	FROM area_mst_pdm area
																	WHERE area.parent_rawid = 0
																	UNION ALL
																	SELECT area.*, LEVEL + 1
																	FROM area_mst_pdm area
																	JOIN q ON q.rawid=area.parent_rawid
																)
																SELECT rawid             AS
																	   area_id,
																	   name,
																	   parent_rawid      AS
																	   parent_id, 
																	   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																	   ELSE 1 END AS leaf
																FROM q qq
																WHERE LEVEL = 2
																ORDER  BY leaf, parent_id
																) areagroup
										where area.parent_rawid = areagroup.area_id
										union all
										select areagroup.area_id, areagroup.level+1, area.name, areagroup.name, areagroup.parent_id
										from area_mst_pdm area, (
																WITH RECURSIVE q AS (
																	SELECT area.*, 1 AS LEVEL
																	FROM area_mst_pdm area
																	WHERE area.parent_rawid = 0
																	UNION ALL
																	SELECT area.*, LEVEL + 1
																	FROM area_mst_pdm area
																	JOIN q ON q.rawid=area.parent_rawid
																)
																SELECT rawid             AS
																	   area_id,
																	   level,
																	   name,
																	   parent_rawid      AS
																	   parent_id, 
																	   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																	   ELSE 1 END AS leaf
																FROM q qq
																WHERE LEVEL = 2
																ORDER  BY leaf, parent_id
																) areagroup
										JOIN area_list ON area_list.area_id=areagroup.parent_id
									)
									select areagroupname, area_id, level, name, parent_id,
										   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.area_id) > 0 THEN 0
										   ELSE 1 END AS leaf
									from area_list qq
									)
								) area_info
		                  WHERE    eqp.area_mst_rawid = area_info.area_id
		                  ORDER BY areagroupname DESC ) areaeqp,
		                  (
		                  SELECT alarm_dtts,
		                       eqp_mst_rawid,
		                       eqp_name,
		                       param_mst_rawid,
		                       param_name,
							   CASE WHEN category = '256' THEN 'Alarm' 
							        WHEN category = '128' THEN 'Warning'
							   END AS category,
		                       fault_class
		                  FROM (
								  SELECT emp.rawid         AS eqp_mst_rawid,
										 emp.name          AS eqp_name,
										 pmp.rawid         AS param_mst_rawid,
										 pmp.name          AS param_name,
										 atp.alarm_type_cd AS category,
										 atp.fault_class,
										 atp.alarm_dtts AS alarm_dtts
								  FROM   alarm_trx_pdm atp,
										 eqp_mst_pdm emp,
										 param_mst_pdm pmp
								  WHERE  1=1
							      and atp.alarm_dtts <![CDATA[>=]]> #{fromdate}
							      and atp.alarm_dtts <![CDATA[<]]> #{todate}
								  and atp.param_mst_rawid=pmp.rawid
								  and pmp.eqp_mst_rawid=emp.rawid ) zzzz ) alarmhistory
		WHERE    1=1
		AND alarmhistory.eqp_mst_rawid=areaeqp.eqp_mst_rawid
		ORDER BY alarmhistory.alarm_dtts
    </select>


    <select id="selectAlarmHistoryByAreaId" resultType="com.bistel.a3.portal.domain.pdm.AlarmHistory" databaseId="oracle">
        select area_name, area_id, eqp_id, eqp_name, alarm_dtts, param_id, param_name, category, fault_class
        from
        (
        select areaeqp.areagroupname as area_name, areaeqp.area_id as area_id,  areaeqp.eqp_mst_rawid as eqp_id  ,areaeqp.eqp_name ,alarmhistory.alarm_dtts, alarmhistory.param_mst_rawid as param_id, alarmhistory.param_name, alarmhistory.category, alarmhistory.fault_class
        from
        (
        select areagroupname,area_id,eqp.name as eqp_name,eqp.rawid as eqp_mst_rawid
        from eqp_mst_pdm eqp,
        (
        select * from
        (SELECT
        name as areagroupname,
        rawid AS area_id,
        level,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        where level=2
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        )
        where leaf =1
        union all
        SELECT
        areagroup.name as  areagroupname,
        area.rawid AS area_id,
        level,
        area.name,
        area.parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm area,
        (
        SELECT
        rawid AS area_id,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        where level=2
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        ) areagroup

        START WITH
        area.parent_rawid = areagroup.area_id
        CONNECT BY
        PRIOR area.rawid = area.parent_rawid
        ) area_info
        where eqp.area_mst_rawid = area_info.area_id
        order by areagroupname desc

        ) areaeqp,



        (
        select alarm_dtts,eqp_mst_rawid, eqp_name, param_mst_rawid, param_name, DECODE(category,'256', 'Alarm','128','Warning') as category, fault_class
        from
        (
        select emp.rawid as eqp_mst_rawid, emp.name as eqp_name, pmp.rawid as param_mst_rawid, pmp.name as param_name, atp.ALARM_TYPE_CD as category, atp.fault_class, atp.ALARM_DTTS as alarm_dtts
        from alarm_trx_pdm atp, eqp_mst_pdm emp, param_mst_pdm pmp
        where 1=1
        and atp.alarm_dtts <![CDATA[>=]]> #{fromdate}
        and atp.alarm_dtts <![CDATA[<]]> #{todate}
        and atp.PARAM_MST_RAWID=pmp.rawid
        and pmp.eqp_mst_rawid=emp.rawid
        )
        ) alarmhistory
        where 1=1
        and alarmhistory.eqp_mst_rawid=areaeqp.eqp_mst_rawid
        order by alarmhistory.alarm_dtts
        )
        where 1=1
        and area_id= #{area_id}

    </select>
    <select id="selectAlarmHistoryByAreaId" resultType="com.bistel.a3.portal.domain.pdm.AlarmHistory" databaseId="postgresql">
		SELECT area_name,
		       area_id,
		       eqp_id,
		       eqp_name,
		       alarm_dtts,
		       param_id,
		       param_name,
		       category,
		       fault_class
		FROM   (
		                SELECT   areaeqp.areagroupname AS area_name,
		                         areaeqp.area_id       AS area_id,
		                         areaeqp.eqp_mst_rawid AS eqp_id ,
		                         areaeqp.eqp_name ,
		                         alarmhistory.alarm_dtts,
		                         alarmhistory.param_mst_rawid AS param_id,
		                         alarmhistory.param_name,
		                         alarmhistory.category,
		                         alarmhistory.fault_class
		                FROM     (
		                                  SELECT   areagroupname,
		                                           area_id,
		                                           eqp.name  AS eqp_name,
		                                           eqp.rawid AS eqp_mst_rawid
		                                  FROM     eqp_mst_pdm eqp,
		                                           (SELECT *
													FROM (
														WITH RECURSIVE q AS (
															SELECT area.*, 1 AS LEVEL
															FROM area_mst_pdm area
															WHERE area.parent_rawid = 0
															UNION ALL
															SELECT area.*, LEVEL + 1
															FROM area_mst_pdm area
															JOIN q ON q.rawid=area.parent_rawid
														)
														SELECT name              AS
															   areagroupname,
															   rawid             AS
															   area_id,
															   LEVEL,
															   name,
															   parent_rawid      AS
															   parent_id,
															   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
															   ELSE 1 END AS leaf
														FROM q qq
														WHERE LEVEL = 2
														ORDER  BY leaf, parent_id
													) area_list
													WHERE  leaf = 1
		
													UNION ALL
		
													(
													with recursive area_list (area_id, LEVEL, name, areagroupname, parent_id) as (
														select area.rawid, 1 as level, area.name, areagroup.name, area.parent_rawid
														from area_mst_pdm area, (
																				WITH RECURSIVE q AS (
																					SELECT area.*, 1 AS LEVEL
																					FROM area_mst_pdm area
																					WHERE area.parent_rawid = 0
																					UNION ALL
																					SELECT area.*, LEVEL + 1
																					FROM area_mst_pdm area
																					JOIN q ON q.rawid=area.parent_rawid
																				)
																				SELECT rawid             AS
																					   area_id,
																					   name,
																					   parent_rawid      AS
																					   parent_id, 
																					   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																					   ELSE 1 END AS leaf
																				FROM q qq
																				WHERE LEVEL = 2
																				ORDER  BY leaf, parent_id
																				) areagroup
														where area.parent_rawid = areagroup.area_id
														union all
														select areagroup.area_id, areagroup.level+1, area.name, areagroup.name, areagroup.parent_id
														from area_mst_pdm area, (
																				WITH RECURSIVE q AS (
																					SELECT area.*, 1 AS LEVEL
																					FROM area_mst_pdm area
																					WHERE area.parent_rawid = 0
																					UNION ALL
																					SELECT area.*, LEVEL + 1
																					FROM area_mst_pdm area
																					JOIN q ON q.rawid=area.parent_rawid
																				)
																				SELECT rawid             AS
																					   area_id,
																					   level,
																					   name,
																					   parent_rawid      AS
																					   parent_id, 
																					   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
																					   ELSE 1 END AS leaf
																				FROM q qq
																				WHERE LEVEL = 2
																				ORDER  BY leaf, parent_id
																				) areagroup
														JOIN area_list ON area_list.area_id=areagroup.parent_id
													)
													select areagroupname, area_id, level, name, parent_id,
														   CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.area_id) > 0 THEN 0
														   ELSE 1 END AS leaf
													from area_list qq
													)
												) area_info
		                                  WHERE    eqp.area_mst_rawid = area_info.area_id
		                                  ORDER BY areagroupname DESC ) areaeqp,
		                         (
		                                SELECT alarm_dtts,
		                                       eqp_mst_rawid,
		                                       eqp_name,
		                                       param_mst_rawid,
		                                       param_name,
		                                       CASE WHEN category = '256' THEN 'Alarm' 
							        		   WHEN category = '128' THEN 'Warning'
							   				   END AS category,
		                                       fault_class
		                                FROM   (
		                                              SELECT emp.rawid         AS eqp_mst_rawid,
		                                                     emp.name          AS eqp_name,
		                                                     pmp.rawid         AS param_mst_rawid,
		                                                     pmp.name          AS param_name,
		                                                     atp.alarm_type_cd AS category,
		                                                     atp.fault_class,
		                                                     atp.alarm_dtts AS alarm_dtts
		                                              FROM   alarm_trx_pdm atp,
		                                                     eqp_mst_pdm emp,
		                                                     param_mst_pdm pmp
		                                              WHERE  1=1
		                                              and atp.alarm_dtts <![CDATA[>=]]> #{fromdate}
        											  and atp.alarm_dtts <![CDATA[<]]> #{todate}
		                                              and atp.param_mst_rawid=pmp.rawid
		                                              and pmp.eqp_mst_rawid=emp.rawid ) zzzz
								 				) alarmhistory
		                WHERE    1=1
		                AND      alarmhistory.eqp_mst_rawid=areaeqp.eqp_mst_rawid
		                ORDER BY alarmhistory.alarm_dtts ) zzz
		WHERE  1=1
		AND    area_id= #{area_id}
    </select>


    <select id="selectAlarmHistoryByEqpId" resultType="com.bistel.a3.portal.domain.pdm.AlarmHistory">
        select alarm.alarm_dtts,eqp.name as eqp_name,param.name as param_name,
        case ALARM_TYPE_CD when '256' then 'Alarm' when '128' then 'Warning' end as category,
        fault_class
        from alarm_trx_pdm alarm,eqp_mst_pdm eqp,param_mst_pdm param
        where
        alarm.alarm_dtts <![CDATA[>=]]> #{fromdate}
        and alarm.alarm_dtts <![CDATA[<]]> #{todate}
        and alarm.param_mst_rawid in (
            select rawid from param_mst_pdm where eqp_mst_rawid =#{eqp_id}
        )
        and param.rawid = alarm.param_mst_rawid
        and param.eqp_mst_rawid = eqp.rawid
    </select>

    <select id="selectAlarmClassificationSummary" resultType="com.bistel.a3.portal.domain.pdm.AlarmClassification" databaseId="oracle">

        select fault_class, count(1) as count
        from
        (
        select alarmeqp.eqp_id as eqp_id, fc.fault_class as fault_class, count(fc.fault_class) as fault_count
        from
        (
        select distinct fault_class
        from alarm_trx_pdm
        ) fc,
        (
        select pmp.EQP_MST_RAWID as eqp_id, atp.fault_class
        from param_mst_pdm pmp,
        (
        select param_mst_rawid,fault_class
        from ALARM_TRX_PDM
        where 1=1
        and alarm_type_cd=256
        and alarm_dtts <![CDATA[>=]]> #{fromdate}
        and alarm_dtts <![CDATA[<]]> #{todate}
        ) atp

        where 1=1
        and pmp.rawid=atp.param_mst_rawid
        and pmp.EQP_MST_RAWID in(

        select distinct eqp.rawid
        from
        (
        select *
        from
        (
        SELECT
        rawid AS area_id,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        )
        where 1=1
        and leaf=1
        )areas, eqp_mst_pdm eqp
        where 1=1
        and areas.area_id=eqp.area_mst_rawid

        )

        ) alarmeqp
        where fc.fault_class=alarmeqp.fault_class
        group by fc.fault_class , alarmeqp.eqp_id
        )
        group by fault_class

    </select>
    <select id="selectAlarmClassificationSummary" resultType="com.bistel.a3.portal.domain.pdm.AlarmClassification" databaseId="postgresql">
		select fault_class, count(1) as count
		from (
			select alarmeqp.eqp_id as eqp_id, fc.fault_class as fault_class, count(fc.fault_class) as fault_count
			from (
				select distinct fault_class
				from alarm_trx_pdm ) fc,
				(
				select pmp.EQP_MST_RAWID as eqp_id, atp.fault_class
				from param_mst_pdm pmp,
				(
					select param_mst_rawid,fault_class
					from ALARM_TRX_PDM
					where 1=1
					and alarm_type_cd = '256'
			        and alarm_dtts <![CDATA[>=]]> #{fromdate}
					and alarm_dtts <![CDATA[<]]> #{todate}
				) atp
				where 1=1
				and pmp.rawid=atp.param_mst_rawid
				and pmp.EQP_MST_RAWID in (
					select distinct eqp.rawid
					from
					(
						WITH RECURSIVE q AS (
							SELECT area.*
							FROM area_mst_pdm area
							WHERE area.parent_rawid = 0
							UNION ALL
							SELECT area.*
							FROM area_mst_pdm area
							JOIN q ON q.rawid=area.parent_rawid
						)
						SELECT qq.rawid AS area_id, qq.name AS name, qq.parent_rawid as parent_id, 
					    CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
						ELSE 1 END AS leaf
						FROM q qq
						ORDER BY leaf, parent_id, area_id
					) areas, eqp_mst_pdm eqp
					where leaf=1
					and areas.area_id=eqp.area_mst_rawid
				)
			) alarmeqp
			where fc.fault_class=alarmeqp.fault_class
			group by fc.fault_class , alarmeqp.eqp_id
		) fault
		group by fault_class
	</select>

    <select id="selectLineStatusTrend" resultType="com.bistel.a3.portal.domain.pdm.AreaFaultCountSummary" databaseId="oracle">
        select total.groupdate as day, total.total_count, alarm.alarm_count, warning.warning_count, offlines.offline_count, total.total_count-(alarm.alarm_count+warning.warning_count+offlines.offline_count) as normal_count
        from
        (

        select groupdate, count(eqp_mst_rawid) as alarm_count
        from
        (
        select eqpalarm.groupdate, eqpalarm.eqp_mst_rawid, emp.offline_yn
        from
        (
        select groupdate, eqp_mst_rawid
        from
        (
        select to_char(alarm_dtts,'yyyy-MM-dd')  as groupdate , param.eqp_mst_rawid
        from alarm_trx_pdm alarm,param_mst_pdm param
        where alarm_dtts <![CDATA[>=]]> #{fromdate}
        and alarm_dtts <![CDATA[<]]> #{todate}
        and alarm_type_cd = 256
        and alarm.param_mst_rawid = param.rawid
        group by to_char(alarm_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid
        order by groupdate
        )
        ) eqpalarm,
        eqp_mst_pdm emp
        where 1=1
        and eqpalarm.eqp_mst_rawid=emp.rawid
        and emp.offline_yn='N'
        order by groupdate
        )
        group by groupdate
        order by groupdate

        ) alarm,



        (
        select groupdate,count (eqp_mst_rawid) as warning_count
        from
        (
        select eqpwarn.groupdate, eqpwarn.eqp_mst_rawid
        from
        (



        select *
        from
        (

        (
        select to_char(alarm_dtts,'yyyy-MM-dd')  as groupdate ,  param.eqp_mst_rawid
        from alarm_trx_pdm alarm,param_mst_pdm param
        where alarm_dtts <![CDATA[>=]]> #{fromdate}
        and alarm_dtts <![CDATA[<]]> #{todate}
        and alarm_type_cd = 128
        and alarm.param_mst_rawid = param.rawid
        group by to_char(alarm_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid

        )
        minus

        (
        select to_char(alarm_dtts,'yyyy-MM-dd')  as groupdate ,  param.eqp_mst_rawid
        from alarm_trx_pdm alarm,param_mst_pdm param
        where alarm_dtts <![CDATA[>=]]> #{fromdate}
        and alarm_dtts <![CDATA[<]]> #{todate}
        and alarm_type_cd = 256
        and alarm.param_mst_rawid = param.rawid
        group by to_char(alarm_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid

        )
        )


        ) eqpwarn,
        eqp_mst_pdm emp
        where 1=1
        and eqpwarn.eqp_mst_rawid=emp.rawid
        and emp.offline_yn='N'
        order by groupdate
        )
        group by groupdate
        order by groupdate

        ) warning,



        (
        select groupdate, count(eqp_mst_rawid) as total_count
        from
        (
        select to_char(event_dtts,'yyyy-MM-dd')  as groupdate ,  param.eqp_mst_rawid
        from trace_trx_pdm trx,param_mst_pdm param
        where event_dtts <![CDATA[>=]]> #{fromdate}
        and event_dtts <![CDATA[<]]> #{todate}
        and trx.param_mst_rawid = param.rawid
        group by to_char(event_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid
        order by groupdate
        )
        group by groupdate
        order by groupdate
        ) total,


        (

        select groupdate, count(eqp_mst_rawid) as offline_count
        from
        (
        select *
        from
        (
        select to_char(event_dtts,'yyyy-MM-dd')  as groupdate ,  param.eqp_mst_rawid
        from trace_trx_pdm trx,param_mst_pdm param, eqp_mst_pdm eqp
        where event_dtts <![CDATA[>=]]> #{fromdate}
        and event_dtts <![CDATA[<]]> #{todate}
        and trx.param_mst_rawid = param.rawid
        and param.eqp_mst_rawid= eqp.rawid
        and eqp.offline_yn='Y'
        group by to_char(event_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid
        order by groupdate
        )
        )
        group by groupdate
        order by groupdate

        ) offlines

        where 1=1
        and offlines.groupdate(+)=total.groupdate
        and total.groupdate(+)=warning.groupdate
        and warning.groupdate(+)=alarm.groupdate
    </select>
	<select id="selectLineStatusTrend" resultType="com.bistel.a3.portal.domain.pdm.AreaFaultCountSummary" databaseId="postgresql">
		SELECT total.groupdate AS day,
		       total.total_count,
		       alarm.alarm_count,
		       warning.warning_count,
		       offlines.offline_count,
		       total.total_count - ( alarm.alarm_count + warning.warning_count + offlines.offline_count ) AS normal_count
		FROM   (SELECT groupdate, Count(eqp_mst_rawid) AS offline_count
		        FROM   (SELECT *
		                FROM   (SELECT To_char(event_dtts, 'yyyy-MM-dd') AS groupdate,
		                               param.eqp_mst_rawid
		                        FROM   trace_trx_pdm trx,
		                               param_mst_pdm param,
		                               eqp_mst_pdm eqp
		                        WHERE  event_dtts <![CDATA[>=]]> #{fromdate}
		        					   and event_dtts <![CDATA[<]]> #{todate}
		                               AND trx.param_mst_rawid = param.rawid
		                               AND param.eqp_mst_rawid = eqp.rawid
		                               AND eqp.offline_yn = 'Y'
		                        GROUP  BY To_char(event_dtts, 'yyyy-MM-dd'),
		                                  param.eqp_mst_rawid
		                        ORDER  BY groupdate) zzz) zzzz
		        GROUP  BY groupdate
		        ORDER  BY groupdate) offlines
				right outer join
		       (SELECT groupdate,
		               Count(eqp_mst_rawid) AS total_count
		        FROM   (SELECT To_char(event_dtts, 'yyyy-MM-dd') AS groupdate,
		                       param.eqp_mst_rawid
		                FROM   trace_trx_pdm trx,
		                       param_mst_pdm param
		                WHERE  event_dtts <![CDATA[>=]]> #{fromdate}
		        			   and event_dtts <![CDATA[<]]> #{todate}
		                       AND trx.param_mst_rawid = param.rawid
		                GROUP  BY To_char(event_dtts, 'yyyy-MM-dd'),
		                          param.eqp_mst_rawid
		                ORDER  BY groupdate) zzzzz
		        GROUP  BY groupdate
		        ORDER  BY groupdate) total
		        on offlines.groupdate=total.groupdate
				right outer join
		       (SELECT groupdate,
		               Count (eqp_mst_rawid) AS warning_count
		        FROM   (SELECT eqpwarn.groupdate,
		                       eqpwarn.eqp_mst_rawid
		                FROM   (SELECT *
		                        FROM   ((SELECT To_char(alarm_dtts, 'yyyy-MM-dd') AS
		                                        groupdate,
		                                        param.eqp_mst_rawid
		                                 FROM   alarm_trx_pdm alarm,
		                                        param_mst_pdm param
		                                 WHERE  alarm_dtts <![CDATA[>=]]> #{fromdate}
										        and alarm_dtts <![CDATA[<]]> #{todate}
		                                        AND alarm_type_cd = '128'
		                                        AND alarm.param_mst_rawid = param.rawid
		                                 GROUP  BY To_char(alarm_dtts, 'yyyy-MM-dd'),
		                                           param.eqp_mst_rawid)
		                                EXCEPT
		                                (SELECT To_char(alarm_dtts, 'yyyy-MM-dd') AS
		                                        groupdate,
		                                        param.eqp_mst_rawid
		                                 FROM   alarm_trx_pdm alarm,
		                                        param_mst_pdm param
		                                 WHERE  alarm_dtts <![CDATA[>=]]> #{fromdate}
										        and alarm_dtts <![CDATA[<]]> #{todate}
		                                        AND alarm_type_cd = '256'
		                                        AND alarm.param_mst_rawid = param.rawid
		                                 GROUP  BY To_char(alarm_dtts, 'yyyy-MM-dd'),
		                                           param.eqp_mst_rawid)) zzz) eqpwarn,
		                       eqp_mst_pdm emp
		                WHERE  1 = 1
		                       AND eqpwarn.eqp_mst_rawid = emp.rawid
		                       AND emp.offline_yn = 'N'
		                ORDER  BY groupdate) zzzz
		        GROUP  BY groupdate
		        ORDER  BY groupdate) warning
		        on total.groupdate=warning.groupdate
				right outer join
				(SELECT groupdate,
		               Count(eqp_mst_rawid) AS alarm_count
		        FROM   (SELECT eqpalarm.groupdate,
		                       eqpalarm.eqp_mst_rawid,
		                       emp.offline_yn
		                FROM   (SELECT groupdate,
		                               eqp_mst_rawid
		                        FROM   (SELECT To_char(alarm_dtts, 'yyyy-MM-dd') AS
		                                       groupdate,
		                                       param.eqp_mst_rawid
		                                FROM   alarm_trx_pdm alarm,
		                                       param_mst_pdm param
		                                WHERE  alarm_dtts <![CDATA[>=]]> #{fromdate}
									   	       and alarm_dtts <![CDATA[<]]> #{todate}
		                                       AND alarm_type_cd = '256'
		                                       AND alarm.param_mst_rawid = param.rawid
		                                GROUP  BY To_char(alarm_dtts, 'yyyy-MM-dd'),
		                                          param.eqp_mst_rawid
		                                ORDER  BY groupdate) z) eqpalarm,
		                       eqp_mst_pdm emp
		                WHERE  1 = 1
		                       AND eqpalarm.eqp_mst_rawid = emp.rawid
		                       AND emp.offline_yn = 'N'
		                ORDER  BY groupdate) zz
		        GROUP  BY groupdate
		        ORDER  BY groupdate) alarm
				on warning.groupdate=alarm.groupdate
	</select>


    <select id="selectLineStatusTrendByAreaId" resultType="com.bistel.a3.portal.domain.pdm.AreaFaultCountSummary" databaseId="oracle">
        select total.groupdate as day, total.total_count, alarm.alarm_count, warning.warning_count, offlines.offline_count , total.total_count-(alarm.alarm_count+warning.warning_count+offlines.offline_count) as normal_count
        from

        (

        select groupdate, count(eqp_mst_rawid) as alarm_count
        from
        (
        select eqpalarm.groupdate, eqpalarm.eqp_mst_rawid, emp.offline_yn
        from
        (
        select groupdate, eqp_mst_rawid
        from
        (
        select to_char(alarm_dtts,'yyyy-MM-dd')  as groupdate , param.eqp_mst_rawid
        from alarm_trx_pdm alarm,param_mst_pdm param
        where alarm_dtts <![CDATA[>=]]> #{fromdate}
        and alarm_dtts <![CDATA[<]]> #{todate}
        and alarm_type_cd = 256
        and alarm.param_mst_rawid = param.rawid
        group by to_char(alarm_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid
        order by groupdate
        )
        ) eqpalarm,
        eqp_mst_pdm emp
        where 1=1
        and eqpalarm.eqp_mst_rawid=emp.rawid
        and emp.offline_yn='N'
        and emp.area_mst_rawid= #{area_id}
        order by groupdate
        )
        group by groupdate
        order by groupdate

        ) alarm,



        (
        select groupdate,count (eqp_mst_rawid) as warning_count
        from
        (
        select eqpwarn.groupdate, eqpwarn.eqp_mst_rawid
        from
        (



        select *
        from
        (

        (
        select to_char(alarm_dtts,'yyyy-MM-dd')  as groupdate ,  param.eqp_mst_rawid
        from alarm_trx_pdm alarm,param_mst_pdm param
        where alarm_dtts <![CDATA[>=]]> #{fromdate}
        and alarm_dtts <![CDATA[<]]> #{todate}
        and alarm_type_cd = 128
        and alarm.param_mst_rawid = param.rawid
        group by to_char(alarm_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid

        )
        minus

        (
        select to_char(alarm_dtts,'yyyy-MM-dd')  as groupdate ,  param.eqp_mst_rawid
        from alarm_trx_pdm alarm,param_mst_pdm param
        where alarm_dtts <![CDATA[>=]]> #{fromdate}
        and alarm_dtts <![CDATA[<]]> #{todate}
        and alarm_type_cd = 256
        and alarm.param_mst_rawid = param.rawid
        group by to_char(alarm_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid

        )
        )


        ) eqpwarn,
        eqp_mst_pdm emp
        where 1=1
        and eqpwarn.eqp_mst_rawid=emp.rawid
        and emp.offline_yn='N'
        and emp.area_mst_rawid= #{area_id}
        order by groupdate
        )
        group by groupdate
        order by groupdate

        ) warning,


        (
        select groupdate, count(eqp_mst_rawid) as total_count
        from
        (
        select to_char(event_dtts,'yyyy-MM-dd')  as groupdate ,  param.eqp_mst_rawid
        from trace_trx_pdm trx,param_mst_pdm param, eqp_mst_pdm emp
        where event_dtts <![CDATA[>=]]> #{fromdate}
        and event_dtts <![CDATA[<]]> #{todate}
        and trx.param_mst_rawid = param.rawid
        and param.eqp_mst_rawid=emp.rawid
        and emp.area_mst_rawid= #{area_id}
        group by to_char(event_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid
        order by groupdate
        )
        group by groupdate
        order by groupdate
        ) total,



        (

        select groupdate, count(eqp_mst_rawid) as offline_count
        from
        (
        select *
        from
        (
        select to_char(event_dtts,'yyyy-MM-dd')  as groupdate ,  param.eqp_mst_rawid
        from trace_trx_pdm trx,param_mst_pdm param, eqp_mst_pdm eqp
        where event_dtts <![CDATA[>=]]> #{fromdate}
        and event_dtts <![CDATA[<]]> #{todate}
        and trx.param_mst_rawid = param.rawid
        and param.eqp_mst_rawid= eqp.rawid
        and eqp.offline_yn='Y'
        and eqp.area_mst_rawid= #{area_id}
        group by to_char(event_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid
        order by groupdate
        )
        )
        group by groupdate
        order by groupdate

        ) offlines

        where 1=1
        and offlines.groupdate(+)=total.groupdate
        and total.groupdate(+)=warning.groupdate
        and warning.groupdate(+)=alarm.groupdate


    </select>
    <select id="selectLineStatusTrendByAreaId" resultType="com.bistel.a3.portal.domain.pdm.AreaFaultCountSummary" databaseId="postgresql">
		select total.groupdate as day, total.total_count, alarm.alarm_count, warning.warning_count, offlines.offline_count , total.total_count-(alarm.alarm_count+warning.warning_count+offlines.offline_count) as normal_count
        from
	        (select groupdate, count(eqp_mst_rawid) as offline_count
	         from
	        	(select *
				 from
					(select to_char(event_dtts,'yyyy-MM-dd')  as groupdate ,  param.eqp_mst_rawid
					from trace_trx_pdm trx,param_mst_pdm param, eqp_mst_pdm eqp
					where 1=1
					and event_dtts <![CDATA[>=]]> #{fromdate}
					and event_dtts <![CDATA[<]]> #{todate}
					and trx.param_mst_rawid = param.rawid
					and param.eqp_mst_rawid= eqp.rawid
					and eqp.offline_yn='Y'
					and eqp.area_mst_rawid= #{area_id}
					group by to_char(event_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid
					order by groupdate
					) zz
		        ) zzz
	         group by groupdate
	         order by groupdate) offlines
			 right outer join
	        (select groupdate, count(eqp_mst_rawid) as total_count
	         from
	        	(select to_char(event_dtts,'yyyy-MM-dd')  as groupdate ,  param.eqp_mst_rawid
				from trace_trx_pdm trx,param_mst_pdm param, eqp_mst_pdm emp
				where 1=1
				and event_dtts <![CDATA[>=]]> #{fromdate}
				and event_dtts <![CDATA[<]]> #{todate}
				and trx.param_mst_rawid = param.rawid
				and param.eqp_mst_rawid=emp.rawid
				and emp.area_mst_rawid= #{area_id}
				group by to_char(event_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid
				order by groupdate
				) z
	         group by groupdate
	         order by groupdate) total
			 on offlines.groupdate=total.groupdate
			 right outer join
	        (select groupdate,count (eqp_mst_rawid) as warning_count
	         from
	        	(select eqpwarn.groupdate, eqpwarn.eqp_mst_rawid
				from
				(
					select *
					from
					(
						(
						select to_char(alarm_dtts,'yyyy-MM-dd')  as groupdate ,  param.eqp_mst_rawid
						from alarm_trx_pdm alarm,param_mst_pdm param
						where 1=1
						and alarm_dtts <![CDATA[>=]]> #{fromdate}
						and alarm_dtts <![CDATA[<]]> #{todate}
						and alarm_type_cd = '128'
						and alarm.param_mst_rawid = param.rawid
						group by to_char(alarm_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid

						)
						EXCEPT
						(
						select to_char(alarm_dtts,'yyyy-MM-dd')  as groupdate ,  param.eqp_mst_rawid
						from alarm_trx_pdm alarm,param_mst_pdm param
						where 1=1
						and alarm_dtts <![CDATA[>=]]> #{fromdate}
						and alarm_dtts <![CDATA[<]]> #{todate}
						and alarm_type_cd = '256'
						and alarm.param_mst_rawid = param.rawid
						group by to_char(alarm_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid
						)
					) zzz
				) eqpwarn,
				eqp_mst_pdm emp
				where 1=1
				and eqpwarn.eqp_mst_rawid=emp.rawid
				and emp.offline_yn='N'
				and emp.area_mst_rawid= #{area_id}
				order by groupdate) zzzz
			 group by groupdate
			 order by groupdate) warning
			 on total.groupdate=warning.groupdate
			 right outer join
	        (select groupdate, count(eqp_mst_rawid) as alarm_count
	         from
				(select eqpalarm.groupdate, eqpalarm.eqp_mst_rawid, emp.offline_yn
				 from
					(select groupdate, eqp_mst_rawid
					 from
						(select to_char(alarm_dtts,'yyyy-MM-dd')  as groupdate , param.eqp_mst_rawid
						 from alarm_trx_pdm alarm,param_mst_pdm param
						 where 1=1 
						 alarm_dtts <![CDATA[>=]]> #{fromdate}
						 and alarm_dtts <![CDATA[<]]> #{todate}
						 and alarm_type_cd = '256'
						 and alarm.param_mst_rawid = param.rawid
						 group by to_char(alarm_dtts,'yyyy-MM-dd'), param.eqp_mst_rawid
						 order by groupdate) z
					 ) eqpalarm, eqp_mst_pdm emp
				where 1=1
				and eqpalarm.eqp_mst_rawid=emp.rawid
				and emp.offline_yn='N'
				and emp.area_mst_rawid= #{area_id}
				order by groupdate
				) zz
 			 group by groupdate
		 	 order by groupdate) alarm
        	 on warning.groupdate=alarm.groupdate
    </select>


    <select id="selectWorstEquipmentList" resultType="com.bistel.a3.portal.domain.pdm.WorstEquipmentList" databaseId="oracle">

        select distinct eqpstatus.eqp_id, eqpstatus.eqp_name,score.score
        from
        (

        select eqp_id,eqp_name,
        case when event_type_cd is null
        then decode(type_cd, 'E', 'RUN', 'IDLE')
        else decode(event_type_cd, 'S', 'RUN', 'IDLE')
        end status,
        start_dtts, end_dtts
        from
        (
        select eqp_id,eqp_name, event_type_cd, lead(event_type_cd) over (partition by eqp_name order by event_dtts) type_cd,
        event_dtts as start_dtts,
        nvl(lead(event_dtts) over (partition by eqp_name order by event_dtts), TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')) end_dtts
        from
        (
        select e.rawid as eqp_id, e.name as eqp_name, v.event_name, v.event_type_cd, t.event_dtts
        from eqp_mst_pdm e, eqp_event_mst_pdm v, eqp_event_trx_pdm t
        where e.rawid=v.eqp_mst_rawid
        <if test="eqp_id != null">
            and e.rawid = #{eqp_id}
        </if>
        and v.rawid=t.eqp_event_mst_rawid
        and v.process_yn='Y'
        and t.event_dtts between TO_TIMESTAMP( #{start_dtts} , 'YYYY-MM-DD HH24:MI:SS')
        and TO_TIMESTAMP( #{end_dtts} , 'YYYY-MM-DD HH24:MI:SS')
        union all
        select rawid as eqp_id, name as eqp_name, 'start', '' as typ, event_dtts from eqp_mst_pdm a,
        (select TO_TIMESTAMP( #{start_dtts} , 'YYYY-MM-DD HH24:MI:SS') as event_dtts from dual) b
        order by eqp_name, event_dtts
        )
        )


        ) eqpstatus,

        (
        select e.rawid as eqp_id,name as eqp_name, max(h.score) as score
        from eqp_mst_pdm e, eqp_health_trx_pdm h
        where e.rawid=h.eqp_mst_rawid
        <if test="eqp_id != null">
            and e.rawid = #{eqp_id}
        </if>
        
        and e.offline_yn='N'
        and h.ALARM_DTTS between TO_TIMESTAMP( #{start_dtts} , 'YYYY-MM-DD HH24:MI:SS')
        and TO_TIMESTAMP( #{end_dtts} , 'YYYY-MM-DD HH24:MI:SS')
        group by e.RAWID,name
        order by score desc
        ) score

        where 1=1
        and eqpstatus.eqp_id=score.eqp_id
    </select>
	<select id="selectWorstEquipmentList" resultType="com.bistel.a3.portal.domain.pdm.WorstEquipmentList" databaseId="postgresql">
		select distinct eqpstatus.eqp_id, eqpstatus.eqp_name,score.score
		from
		    (
			select eqp_id,eqp_name,
			case when event_type_cd is null then 
				case when type_cd = 'E' then 'RUN' else 'IDLE' end
			else
				case when event_type_cd = 'S' then 'RUN' else 'IDLE' end
			end status,
			start_dtts, end_dtts
			from
			(
			select eqp_id,eqp_name, event_type_cd, lead(event_type_cd) over (partition by eqp_name order by event_dtts) type_cd, event_dtts as start_dtts,
			COALESCE(lead(event_dtts) over (partition by eqp_name order by event_dtts), TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')) end_dtts
		
			from
			(
			select e.rawid as eqp_id, e.name as eqp_name, v.event_name, v.event_type_cd, t.event_dtts
			from eqp_mst_pdm e, eqp_event_mst_pdm v, eqp_event_trx_pdm t
			where e.rawid=v.eqp_mst_rawid
			and v.rawid=t.eqp_event_mst_rawid
			and v.process_yn='Y'
			and t.event_dtts between TO_TIMESTAMP( #{start_dtts} , 'YYYY-MM-DD HH24:MI:SS')
			and TO_TIMESTAMP( #{end_dtts} , 'YYYY-MM-DD HH24:MI:SS')
			union all
			select rawid as eqp_id, name as eqp_name, 'start', '' as typ, event_dtts from eqp_mst_pdm a,
			(select TO_TIMESTAMP( #{start_dtts} , 'YYYY-MM-DD HH24:MI:SS') as event_dtts) b
			order by eqp_name, event_dtts
			) z
			) zz
		
			) eqpstatus,
		
			(
			select e.rawid as eqp_id,name as eqp_name, max(h.score) as score
			from eqp_mst_pdm e, eqp_health_trx_pdm h
			where e.rawid=h.eqp_mst_rawid
			and e.offline_yn='N'
			and h.ALARM_DTTS between TO_TIMESTAMP( #{start_dtts} , 'YYYY-MM-DD HH24:MI:SS')
			and TO_TIMESTAMP( #{end_dtts} , 'YYYY-MM-DD HH24:MI:SS')
			group by e.RAWID,name
			order by score desc
			) score
		where 1=1
		and eqpstatus.eqp_id=score.eqp_id
	</select>

    <select id="selectWorstEqupmentListChartData" resultType="com.bistel.a3.portal.domain.pdm.WorstEqupmentListChartData" databaseId="oracle">

        select eqpstatus.eqp_id, eqpstatus.status, eqpstatus.start_dtts, eqpstatus.end_dtts
        from
        (

        select eqp_id,eqp_name,
        case when event_type_cd is null
        then decode(type_cd, 'E', 'RUN', 'IDLE')
        else decode(event_type_cd, 'S', 'RUN', 'IDLE')
        end status,
        start_dtts, end_dtts
        from
        (
        select eqp_id,eqp_name, event_type_cd, lead(event_type_cd) over (partition by eqp_name order by event_dtts) type_cd,
        event_dtts as start_dtts,
        nvl(lead(event_dtts) over (partition by eqp_name order by event_dtts), TO_TIMESTAMP( #{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')) end_dtts
        from
        (
        select e.rawid as eqp_id, e.name as eqp_name, v.event_name, v.event_type_cd, t.event_dtts
        from eqp_mst_pdm e, eqp_event_mst_pdm v, eqp_event_trx_pdm t
        where e.rawid=v.eqp_mst_rawid
        and v.rawid=t.eqp_event_mst_rawid
        and v.process_yn='Y'
        and t.event_dtts between TO_TIMESTAMP( #{start_dtts} , 'YYYY-MM-DD HH24:MI:SS')
        and TO_TIMESTAMP( #{end_dtts} , 'YYYY-MM-DD HH24:MI:SS')
        union all
        select rawid as eqp_id, name as eqp_name, 'start', '' as typ, event_dtts from eqp_mst_pdm a,
        (select TO_TIMESTAMP( #{start_dtts} , 'YYYY-MM-DD HH24:MI:SS') as event_dtts from dual) b
        order by eqp_name, event_dtts
        )
        )


        ) eqpstatus,

        (
        select e.rawid as eqp_id,name as eqp_name, max(h.score) as score
        from eqp_mst_pdm e, eqp_health_trx_pdm h
        where e.rawid=h.eqp_mst_rawid
        and e.offline_yn='N'
        and h.ALARM_DTTS between TO_TIMESTAMP( #{start_dtts} , 'YYYY-MM-DD HH24:MI:SS')
        and TO_TIMESTAMP( #{end_dtts} , 'YYYY-MM-DD HH24:MI:SS')
        group by e.RAWID,name
        order by score desc
        ) score

        where 1=1
        and eqpstatus.eqp_id=score.eqp_id
    </select>
    <select id="selectWorstEqupmentListChartData" resultType="com.bistel.a3.portal.domain.pdm.WorstEqupmentListChartData" databaseId="postgresql">
		select eqpstatus.eqp_id, eqpstatus.status, eqpstatus.start_dtts, eqpstatus.end_dtts
		from
		(
			select eqp_id,eqp_name,
		
			case when event_type_cd is null then 
				case when type_cd = 'E' then 'RUN' else 'IDLE' end
			else
				case when event_type_cd = 'S' then 'RUN' else 'IDLE' end
			end status,
		
			start_dtts, end_dtts
			from
			(
			select eqp_id,eqp_name, event_type_cd, lead(event_type_cd) over (partition by eqp_name order by event_dtts) type_cd,
			event_dtts as start_dtts,
			COALESCE(lead(event_dtts) over (partition by eqp_name order by event_dtts), TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')) end_dtts
			from
			(
			select e.rawid as eqp_id, e.name as eqp_name, v.event_name, v.event_type_cd, t.event_dtts
			from eqp_mst_pdm e, eqp_event_mst_pdm v, eqp_event_trx_pdm t
			where e.rawid=v.eqp_mst_rawid
			and v.rawid=t.eqp_event_mst_rawid
			and v.process_yn='Y'
			and t.event_dtts between TO_TIMESTAMP( #{start_dtts} , 'YYYY-MM-DD HH24:MI:SS')
			and TO_TIMESTAMP( #{end_dtts} , 'YYYY-MM-DD HH24:MI:SS')
			union all
			select rawid as eqp_id, name as eqp_name, 'start', '' as typ, event_dtts from eqp_mst_pdm a,
			(select TO_TIMESTAMP( #{start_dtts} , 'YYYY-MM-DD HH24:MI:SS') as event_dtts) b
			order by eqp_name, event_dtts
			) zz
			) zzz
		
		
			) eqpstatus,
		
			(
			select e.rawid as eqp_id,name as eqp_name, max(h.score) as score
			from eqp_mst_pdm e, eqp_health_trx_pdm h
			where e.rawid=h.eqp_mst_rawid
			and e.offline_yn='N'
			and h.ALARM_DTTS between TO_TIMESTAMP( #{start_dtts} , 'YYYY-MM-DD HH24:MI:SS')
			and TO_TIMESTAMP( #{end_dtts} , 'YYYY-MM-DD HH24:MI:SS')
			group by e.RAWID,name
			order by score desc
			) score
		where 1=1
		and eqpstatus.eqp_id=score.eqp_id
    </select>


    <select id="selectWorstEquipmentListByAreaId"  resultType="com.bistel.a3.portal.domain.pdm.WorstEquipmentList" databaseId="oracle">
        select distinct worsteqp.eqp_id, worsteqp.eqp_name, worsteqp.score
        from

        (


        select eqpstatus.eqp_id, eqpstatus.eqp_name,score.score, eqpstatus.status, eqpstatus.start_dtts, eqpstatus.end_dtts
        from

        (

        select eqp_id,eqp_name,
        case when event_type_cd is null
        then decode(type_cd, 'E', 'RUN', 'IDLE')
        else decode(event_type_cd, 'S', 'RUN', 'IDLE')
        end status,
        start_dtts, end_dtts
        from
        (
        select eqp_id,eqp_name, event_type_cd, lead(event_type_cd) over (partition by eqp_name order by event_dtts) type_cd,
        event_dtts as start_dtts,
        nvl(lead(event_dtts) over (partition by eqp_name order by event_dtts), TO_TIMESTAMP( #{end_dtts} , 'YYYY-MM-DD HH24:MI:SS')) end_dtts
        from
        (
        select e.rawid as eqp_id, e.name as eqp_name, v.event_name, v.event_type_cd, t.event_dtts
        from eqp_mst_pdm e, eqp_event_mst_pdm v, eqp_event_trx_pdm t
        where e.rawid=v.eqp_mst_rawid
        and v.rawid=t.eqp_event_mst_rawid
        and v.process_yn='Y'
        and t.event_dtts between TO_TIMESTAMP(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS')
        and TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')
        union all
        select rawid as eqp_id, name as eqp_name, 'start', '' as typ, event_dtts from eqp_mst_pdm a,
        (select TO_TIMESTAMP(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS') as event_dtts from dual) b
        order by eqp_name, event_dtts
        )
        )


        ) eqpstatus,

        (
        select e.rawid as eqp_id,name as eqp_name, max(h.score) as score
        from eqp_mst_pdm e, eqp_health_trx_pdm h
        where e.rawid=h.eqp_mst_rawid
        and e.offline_yn='N'
        and h.ALARM_DTTS between TO_TIMESTAMP(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS')
        and TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')
        group by e.RAWID,name
        order by score desc
        ) score


        where 1=1
        and eqpstatus.eqp_id=score.eqp_id

        ) worsteqp,

        eqp_mst_pdm eqp
        where 1=1
        and worsteqp.eqp_id=eqp.rawid
        and eqp.area_mst_rawid= #{area_id}

    </select>
    <select id="selectWorstEquipmentListByAreaId"  resultType="com.bistel.a3.portal.domain.pdm.WorstEquipmentList" databaseId="postgresql">
		select distinct worsteqp.eqp_id, worsteqp.eqp_name, worsteqp.score
		from
		(
			select eqpstatus.eqp_id, eqpstatus.eqp_name,score.score, eqpstatus.status, eqpstatus.start_dtts, eqpstatus.end_dtts
			from
			(
			select eqp_id,eqp_name,
			case when event_type_cd is null then 
				case when type_cd = 'E' then 'RUN' else 'IDLE' end
			else
				case when event_type_cd = 'S' then 'RUN' else 'IDLE' end
			end status,
			start_dtts, end_dtts
			from
			(
			select eqp_id,eqp_name, event_type_cd, lead(event_type_cd) over (partition by eqp_name order by event_dtts) type_cd,
			event_dtts as start_dtts,
			COALESCE(lead(event_dtts) over (partition by eqp_name order by event_dtts), TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')) end_dtts
			from
			(
			select e.rawid as eqp_id, e.name as eqp_name, v.event_name, v.event_type_cd, t.event_dtts
			from eqp_mst_pdm e, eqp_event_mst_pdm v, eqp_event_trx_pdm t
			where e.rawid=v.eqp_mst_rawid
			and v.rawid=t.eqp_event_mst_rawid
			and v.process_yn='Y'
			and t.event_dtts between TO_TIMESTAMP(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS')
			and TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')
			union all
			select rawid as eqp_id, name as eqp_name, 'start', '' as typ, event_dtts from eqp_mst_pdm a,
			(select TO_TIMESTAMP(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS') as event_dtts) b
			order by eqp_name, event_dtts
			) z
			) zz
		
		
			) eqpstatus,
		
			(
			select e.rawid as eqp_id,name as eqp_name, max(h.score) as score
			from eqp_mst_pdm e, eqp_health_trx_pdm h
			where e.rawid=h.eqp_mst_rawid
			and e.offline_yn='N'
			and h.ALARM_DTTS between TO_TIMESTAMP(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS')
			and TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')
			group by e.RAWID,name
			order by score desc
			) score
		
			where 1=1
			and eqpstatus.eqp_id=score.eqp_id
		
			) worsteqp,
		eqp_mst_pdm eqp
		where 1=1
		and worsteqp.eqp_id=eqp.rawid
		and eqp.area_mst_rawid= #{area_id}
    </select>


    <select id="selectWorstEqupmentListChartDataByAreaId" resultType="com.bistel.a3.portal.domain.pdm.WorstEqupmentListChartData" databaseId="oracle">
        select worsteqp.eqp_id, worsteqp.status, worsteqp.start_dtts, worsteqp.end_dtts
        from

        (


        select eqpstatus.eqp_id, eqpstatus.eqp_name,score.score, eqpstatus.status, eqpstatus.start_dtts, eqpstatus.end_dtts
        from

        (

        select eqp_id,eqp_name,
        case when event_type_cd is null
        then decode(type_cd, 'E', 'RUN', 'IDLE')
        else decode(event_type_cd, 'S', 'RUN', 'IDLE')
        end status,
        start_dtts, end_dtts
        from
        (
        select eqp_id,eqp_name, event_type_cd, lead(event_type_cd) over (partition by eqp_name order by event_dtts) type_cd,
        event_dtts as start_dtts,
        nvl(lead(event_dtts) over (partition by eqp_name order by event_dtts), TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')) end_dtts
        from
        (
        select e.rawid as eqp_id, e.name as eqp_name, v.event_name, v.event_type_cd, t.event_dtts
        from eqp_mst_pdm e, eqp_event_mst_pdm v, eqp_event_trx_pdm t
        where e.rawid=v.eqp_mst_rawid
        and v.rawid=t.eqp_event_mst_rawid
        and v.process_yn='Y'
        and t.event_dtts between TO_TIMESTAMP(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS')
        and TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')
        union all
        select rawid as eqp_id, name as eqp_name, 'start', '' as typ, event_dtts from eqp_mst_pdm a,
        (select TO_TIMESTAMP(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS') as event_dtts from dual) b
        order by eqp_name, event_dtts
        )
        )


        ) eqpstatus,

        (
        select e.rawid as eqp_id,name as eqp_name, max(h.score) as score
        from eqp_mst_pdm e, eqp_health_trx_pdm h
        where e.rawid=h.eqp_mst_rawid
        and e.offline_yn='N'
        and h.ALARM_DTTS between TO_TIMESTAMP(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS')
        and TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')
        group by e.RAWID,name
        order by score desc
        ) score


        where 1=1
        and eqpstatus.eqp_id=score.eqp_id

        ) worsteqp,

        eqp_mst_pdm eqp
        where 1=1
        and worsteqp.eqp_id=eqp.rawid
        and eqp.area_mst_rawid= #{area_id}

    </select>
    <select id="selectWorstEqupmentListChartDataByAreaId" resultType="com.bistel.a3.portal.domain.pdm.WorstEqupmentListChartData" databaseId="postgresql">
		select worsteqp.eqp_id, worsteqp.status, worsteqp.start_dtts, worsteqp.end_dtts
		from
		(
			select eqpstatus.eqp_id, eqpstatus.eqp_name,score.score, eqpstatus.status, eqpstatus.start_dtts, eqpstatus.end_dtts
			from
			(
			select eqp_id,eqp_name,
			case when event_type_cd is null then 
				case when type_cd = 'E' then 'RUN' else 'IDLE' end
			else
				case when event_type_cd = 'S' then 'RUN' else 'IDLE' end
			end status,
			start_dtts, end_dtts
			from
			(
			select eqp_id,eqp_name, event_type_cd, lead(event_type_cd) over (partition by eqp_name order by event_dtts) type_cd,
			event_dtts as start_dtts,
			COALESCE(lead(event_dtts) over (partition by eqp_name order by event_dtts), TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')) end_dtts
			from
			(
			select e.rawid as eqp_id, e.name as eqp_name, v.event_name, v.event_type_cd, t.event_dtts
			from eqp_mst_pdm e, eqp_event_mst_pdm v, eqp_event_trx_pdm t
			where e.rawid=v.eqp_mst_rawid
			and v.rawid=t.eqp_event_mst_rawid
			and v.process_yn='Y'
			and t.event_dtts between TO_TIMESTAMP(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS')
			and TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')
			union all
			select rawid as eqp_id, name as eqp_name, 'start', '' as typ, event_dtts from eqp_mst_pdm a,
			(select TO_TIMESTAMP(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS') as event_dtts) b
			order by eqp_name, event_dtts
			) zz
			) zzz
				
			) eqpstatus,
		
			(
			select e.rawid as eqp_id,name as eqp_name, max(h.score) as score
			from eqp_mst_pdm e, eqp_health_trx_pdm h
			where e.rawid=h.eqp_mst_rawid
			and e.offline_yn='N'
			and h.ALARM_DTTS between TO_TIMESTAMP(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS')
			and TO_TIMESTAMP(#{end_dtts}, 'YYYY-MM-DD HH24:MI:SS')
			group by e.RAWID,name
			order by score desc
			) score
		
			where 1=1
			and eqpstatus.eqp_id=score.eqp_id
		
			) worsteqp, eqp_mst_pdm eqp
		where 1=1
		and worsteqp.eqp_id=eqp.rawid
		and eqp.area_mst_rawid= #{area_id}
    </select>


    <select id="selectAlarmClassificationSummaryByAreaId" resultType="com.bistel.a3.portal.domain.pdm.AlarmClassification" databaseId="oracle">

        select fault_class, count(1) as count
        from
        (

        select alarmeqp.eqp_id as eqp_id, fc.fault_class as fault_class, count(fc.fault_class) as fault_count
        from
        (
        select distinct fault_class
        from alarm_trx_pdm
        ) fc,


        (
        select pmp.EQP_MST_RAWID as eqp_id, atp.fault_class
        from param_mst_pdm pmp,
        (
        select param_mst_rawid,fault_class
        from ALARM_TRX_PDM
        where 1=1
        and alarm_type_cd=256
        and alarm_dtts <![CDATA[>=]]> #{fromdate}
        and alarm_dtts <![CDATA[<]]> #{todate}
        ) atp

        where 1=1
        and pmp.rawid=atp.param_mst_rawid
        and pmp.EQP_MST_RAWID in(

        select distinct eqp.rawid
        from
        (
        select *
        from
        (
        SELECT
        rawid AS area_id,
        name,
        parent_rawid AS parent_id,
        CONNECT_BY_ISLEAF AS leaf
        FROM
        area_mst_pdm
        START WITH
        parent_rawid = 0
        CONNECT BY
        PRIOR rawid = parent_rawid
        ORDER BY
        leaf,
        parent_id
        )
        where 1=1
        and leaf=1
        )areas, eqp_mst_pdm eqp
        where 1=1
        and areas.area_id=eqp.area_mst_rawid
        and eqp.area_mst_rawid= #{area_id}
        )

        ) alarmeqp
        where fc.fault_class=alarmeqp.fault_class
        group by fc.fault_class , alarmeqp.eqp_id
        )
        group by fault_class

    </select>
    <select id="selectAlarmClassificationSummaryByAreaId" resultType="com.bistel.a3.portal.domain.pdm.AlarmClassification" databaseId="postgresql">
		select fault_class, count(1) as count
		from
			(
		     select alarmeqp.eqp_id as eqp_id, fc.fault_class as fault_class, count(fc.fault_class) as fault_count
			 from
				(
				select distinct fault_class
				from alarm_trx_pdm
				) fc,
				(
				select pmp.EQP_MST_RAWID as eqp_id, atp.fault_class
				from param_mst_pdm pmp,
				(
					select param_mst_rawid,fault_class
					from ALARM_TRX_PDM
					where 1=1
					and alarm_type_cd = '256'
					and alarm_dtts <![CDATA[>=]]> #{fromdate}
					and alarm_dtts <![CDATA[<]]> #{todate}
				) atp
				where 1=1
				and pmp.rawid=atp.param_mst_rawid
				and pmp.EQP_MST_RAWID in(
					select distinct eqp.rawid
					from
					(
						WITH RECURSIVE q AS (
							SELECT area.*
							FROM area_mst_pdm area
							WHERE area.parent_rawid = 0
							UNION ALL
							SELECT area.*
							FROM area_mst_pdm area
							JOIN q ON q.rawid=area.parent_rawid
						)
						SELECT qq.rawid AS area_id, qq.name AS name, qq.parent_rawid as parent_id, 
					    CASE WHEN (SELECT COUNT(*) FROM area_mst_pdm WHERE parent_rawid = qq.rawid) > 0 THEN 0
						ELSE 1 END AS leaf
						FROM q qq
						ORDER BY leaf, parent_id, area_id
					) areas, eqp_mst_pdm eqp
					where leaf=1
					and areas.area_id=eqp.area_mst_rawid
					and eqp.area_mst_rawid= #{area_id}
				)
			) alarmeqp
			where fc.fault_class=alarmeqp.fault_class
			group by fc.fault_class , alarmeqp.eqp_id
		) fault
		group by fault_class
    </select>


    <!-- 쿼리 변경-->
    <!--<select id="selectEqpHealthIndexMasterInfo" resultType="com.bistel.a3.portal.domain.pdm.EqpHealthIndex">-->
        <!--select eqphealthmasterinfo.area_id, eqphealthmasterinfo.area_name, eqphealthmasterinfo.eqp_id, eqphealthmasterinfo.eqp_name, alarmcount.alarm_count-->
        <!--from-->
        <!--(-->
        <!--select area_id, area_name, eqp_id, eqp_name-->
        <!--from-->
        <!--(-->
        <!--select area.rawid as area_id, area.name as area_name, eqp.rawid as eqp_id, eqp.name as eqp_name , eqphealth.health_logic_mst_rawid, eqphealth.score, eqphealth.alarm_count-->
        <!--from eqp_health_daily_sum_pdm eqphealth, eqp_mst_pdm eqp, area_mst_pdm area-->
        <!--where 1=1-->
        <!--and area.rawid=eqp.area_mst_rawid-->
        <!--and eqphealth.EQP_MST_RAWID=eqp.rawid-->
        <!--and eqphealth.sum_dtts <![CDATA[>=]]> #{fromdate}-->
        <!--and eqphealth.sum_dtts <![CDATA[<]]> #{todate}-->
        <!--)-->
        <!--group by area_id, area_name, eqp_id, eqp_name-->
        <!--) eqphealthmasterinfo,-->

        <!--(-->
        <!--select eqp_id, sum(alarm_count) as alarm_count-->
        <!--from-->
        <!--(-->
        <!--select area.rawid as area_id, area.name as area_name, eqp.rawid as eqp_id, eqp.name as eqp_name , eqphealth.health_logic_mst_rawid, eqphealth.score, eqphealth.alarm_count-->
        <!--from eqp_health_daily_sum_pdm eqphealth, eqp_mst_pdm eqp, area_mst_pdm area-->
        <!--where 1=1-->
        <!--and area.rawid=eqp.area_mst_rawid-->
        <!--and eqphealth.EQP_MST_RAWID=eqp.rawid-->
        <!--and eqphealth.sum_dtts  <![CDATA[>=]]> #{fromdate}-->
        <!--and eqphealth.sum_dtts  <![CDATA[<]]> #{todate}-->
        <!--)-->
        <!--group by eqp_id-->
        <!--) alarmcount-->

        <!--where 1=1-->
        <!--and eqphealthmasterinfo.eqp_id=alarmcount.eqp_id-->

    <!--</select>-->

    <!--<select id="selectEqpHealthIndexInfo" resultType="com.bistel.a3.portal.domain.pdm.EqpHealthIndex">-->

        <!--select eqp_id, health_logic_mst_rawid, score, alarm_count-->
        <!--from-->
        <!--(-->
        <!--select area.rawid as area_id, area.name as area_name, eqp.rawid as eqp_id, eqp.name as eqp_name , eqphealth.health_logic_mst_rawid, eqphealth.score, eqphealth.alarm_count-->
        <!--from eqp_health_daily_sum_pdm eqphealth, eqp_mst_pdm eqp, area_mst_pdm area-->
        <!--where 1=1-->
        <!--and area.rawid=eqp.area_mst_rawid-->
        <!--and eqphealth.EQP_MST_RAWID=eqp.rawid-->
        <!--and eqphealth.sum_dtts <![CDATA[>=]]> #{fromdate}-->
        <!--and eqphealth.sum_dtts <![CDATA[<]]> #{todate}-->
        <!--)-->

    <!--</select>-->

    <select id="selectEqpHealthIndexMasterEqpInfo" resultType="com.bistel.a3.portal.domain.pdm.EqpHealthIndex">
        select eqp_id, eqp_name,param_id ,param_name, health_logic_id ,code, max(score) score
        from
        (
        select e.rawid eqp_id, e.name eqp_name,p.rawid param_id ,p.name param_name,l.rawid health_logic_id ,l.code, h.score
        from eqp_mst_pdm e, param_mst_pdm p, PARAM_HEALTH_TRX_PDM h, PARAM_HEALTH_mst_pdm a, health_logic_mst_pdm l
        where p.rawid=h.param_mst_rawid
        and p.eqp_mst_rawid=e.rawid
        and h.PARAM_HEALTH_MST_RAWID = a.rawid
        and a.health_logic_mst_rawid=l.rawid

        and h.ALARM_DTTS <![CDATA[>=]]> #{fromdate}
        and h.ALARM_DTTS <![CDATA[<]]> #{todate}
        )
        group by eqp_id, eqp_name,param_id, param_name,health_logic_id, code
        order by eqp_id, eqp_name,param_id ,param_name,health_logic_id ,code
    </select>




    <select id="selectEqpHealthIndexByAreaId" resultType="com.bistel.a3.portal.domain.pdm.EqpHealthIndex">
        select area.rawid as area_id, area.name as area_name, eqp.rawid as eqp_id, eqp.name as eqp_name , eqphealth.health_logic_mst_rawid, eqphealth.score, eqphealth.alarm_count
        from eqp_health_daily_sum_pdm eqphealth, eqp_mst_pdm eqp, area_mst_pdm area
        where 1=1
        and area.rawid=eqp.area_mst_rawid
        and eqphealth.EQP_MST_RAWID=eqp.rawid
        and eqphealth.sum_dtts <![CDATA[>=]]> #{fromdate}
        and eqphealth.sum_dtts <![CDATA[<]]> #{todate}
        and area.rawid= #{area_id}
    </select>


    <select id="selectEqpHealthSPCRule" resultType="com.bistel.a3.portal.domain.pdm.EqpHealthSPCRule">
        select a.rawid as param_health_id, a.param_mst_rawid as param_id, a.health_logic_mst_rawid as health_logic_id, a.APPLY_LOGIC_YN, b.rawid as health_logic_option_id, b.OPTION_NAME, b.option_value
        from param_health_mst_pdm a, health_logic_option_mst_pdm b
        where 1=1
        and a.HEALTH_LOGIC_MST_RAWID=b.HEALTH_LOGIC_MST_RAWID
        and a.param_mst_rawid= #{param_id}
        and a.health_logic_mst_rawid= #{health_logic_id}

    </select>


    <select id="selectPreviousAVGAndSigma" resultType="com.bistel.a3.portal.domain.pdm.EqpStatisticsData">
        select *
        from
        (
        select
        a.rawid param_id, a.name as param_name, mean as previous_avg, sigma, score
        from
        (
        select p.rawid, p.name, avg(t.value) mean, stddev(t.value) sigma
        from param_mst_pdm p, trace_trx_pdm t
        where p.rawid=t.param_mst_rawid
        and t.status_cd='R'
        and t.event_dtts between to_timestamp(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS.FF') - 90
        and to_timestamp(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS.FF')
        group by p.rawid,p.name
        ) a,
        (
        select
        name, sum(mean*count)/n as score
        from
        (
        select p.name, t.mean, t.count, count(*) over(partition by p.rawid) n
        from param_mst_pdm p, param_feature_trx_pdm t
        where p.rawid=t.param_mst_rawid
        and t.end_dtts between to_timestamp(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS.FF') - 7
        and to_timestamp(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS.FF')
        )
        group by name, n
        ) b
        where a.name=b.name
        )
        where param_id = #{param_id}


    </select>

    <select id="selectPeriodAVG" resultType="com.bistel.a3.portal.domain.pdm.EqpStatisticsData">
        select *
        from
        (
        select p.rawid as param_id, p.name as param_name, t.mean as period_avg, t.end_dtts as previous_date
        from param_mst_pdm p, param_feature_trx_pdm t
        where p.rawid=t.param_mst_rawid
        and t.end_dtts between to_timestamp(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS.FF') - 7
        and to_timestamp(#{start_dtts}, 'YYYY-MM-DD HH24:MI:SS.FF')
        )
        where param_id = #{param_id};

    </select>



</mapper>


